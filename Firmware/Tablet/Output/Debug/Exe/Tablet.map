***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.14.0 compiled Aug 26 2021 19:08:15
  Copyright (c) 2017-2021 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  ESP32.o                                               302          20                        
  I2C.o                                               1 904                                 448
  Interrupts.o                                          672          74                       4
  LCD.o                                               2 050       2 505           4            
  LEDs.o                                                346                                    
  LPC1700_Startup.o                                      16                                    
  LPC177x_8x_Vectors.o                                  300                                    
  Microphone.o                                          224                              32 777
  Power.o                                                46                                    
  RAM.o                                               1 072          16                        
  RTC.o                                                 482                                   4
  SEGGER_THUMB_Startup.o                                 20                                    
  SEGGER_crtinit_v7m_little.o                            70                                    
  SPI.o                                                 664                                  12
  main.o                                                272          33                      36
  system_LPC177x_8x.o                                 2 246                      16            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (16 objects)                              10 686       2 648          20      33 281
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v7m_t_le_eabi_balanced.a                       7 260         319                   1 160
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (1 archives)                               7 260         319                   1 160
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       56                   2 048
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             17 946       3 023          20      36 489
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)          422          20                   1 160
  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
                                                      3 324          67                        
  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                      1 720                                    
  floatops.o (libc_v7m_t_le_eabi_balanced.a)            772                                    
  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                        208                                    
  intops.o (libc_v7m_t_le_eabi_balanced.a)                8                                    
  prinops.o (libc_v7m_t_le_eabi_balanced.a)             270         160                        
  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
                                                         82                                    
  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                        316                                    
  strops.o (libc_v7m_t_le_eabi_balanced.a)               38                                    
  utilops.o (libc_v7m_t_le_eabi_balanced.a)             100          72                        
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (11 members from 1 archives)               7 260         319                   1 160
  Objects (16 files)                                 10 686       2 648          20      33 281
  Linker created (shared data, fills, blocks):                       56                   2 048
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             17 946       3 023          20      36 489
  =============================================  ==========  ==========  ==========  ==========

Detailed memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               56                        
  Memory for block 'stack'                                                                2 048
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         56                   2 048
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (16 files)                                 10 686       2 648          20      33 281
  Archives (1 files)                                  7 260         319                   1 160
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             17 946       3 023          20      36 489
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  00000000-000000e3  _vectors                          228  256
                                                                Code  RX  LPC177x_8x_Vectors.o
  000000e4-000000e5  NMI_Handler                         2   2  Code  RX  LPC177x_8x_Vectors.o
  000000e6-000000e7  SVC_Handler                         2   2  Code  RX  LPC177x_8x_Vectors.o
  000000e8-0000012f  __SEGGER_RTL_aPower2               72   8  Cnst  RO  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  00000130-000001cf  __SEGGER_RTL_ipow10               160   8  Cnst  RO  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  000001d0-00000533  I2C0_IRQHandler                   868   4  Code  RX  I2C.o
  00000534-000008af  I2C1_IRQHandler                   892   4  Code  RX  I2C.o
  000008b0-00000baf  glyph_dsc                         768   4  Cnst  RO  LCD.o
  00000bb0-00000bc3  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  00000bc4-00000e03  __aeabi_dadd                      576   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000e04-00000e0b  __aeabi_dsub                        8   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000e0c-00000f3b  __aeabi_dmul                      304   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000f3c-000010ff  __aeabi_ddiv                      452   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001100-00001133  __aeabi_dcmpeq                     52   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001134-0000116f  __aeabi_dcmpge                     60   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001170-000011a7  __aeabi_dcmpgt                     56   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000011a8-000011df  __aeabi_dcmplt                     56   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000011e0-0000121f  __aeabi_d2ulz                      64   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001220-0000127b  __aeabi_ul2d                       92   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0000127c-0000134b  __aeabi_uldivmod                  208   4  Code  RX  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0000134c-00001383  strcpy                             56   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001384-000013cf  strlen                             76   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000013d0-0000141b  memcpy                             76   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0000141c-00001487  __aeabi_memclr                    108   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001488-00002183  __SEGGER_RTL_vfprintf_short_float_long
                                                     3 324   4  Code  RX  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00002184-00002201  led_status                        126   4  Code  RX  LEDs.o
  00002202-000026fb  SystemCoreClockUpdate           1 274   2  Code  RX  system_LPC177x_8x.o
  000026fc-00002825  SystemInit                        298   2  Code  RX  system_LPC177x_8x.o
  00002826-00002ac7  SystemInit_ExtMemCtl              674   2  Code  RX  system_LPC177x_8x.o
  00002ac8-00002b45  led_init                          126   2  Code  RX  LEDs.o
  00002b46-00002b57  led_green_on                       18   2  Code  RX  LEDs.o
  00002b58-00002b69  led_green_off                      18   2  Code  RX  LEDs.o
  00002b6a-00002ba3  led_flash                          58   2  Code  RX  LEDs.o
  00002ba4-00002c5d  SSP0_Init                         186   2  Code  RX  SPI.o
  00002c5e-00002ce7  SSPReceive                        138   2  Code  RX  SPI.o
  00002ce8-00002db5  RTC_Init                          206   2  Code  RX  RTC.o
  00002db6-0000319f  ram_init                        1 002   2  Code  RX  RAM.o
  000031a0-000031e5  ram_write_init                     70   2  Code  RX  RAM.o
  000031e6-00003213  enable_10v_boost                   46   2  Code  RX  Power.o
  00003214-0000325d  esp32_init                         74   2  Code  RX  ESP32.o
  0000325e-0000326f  esp32_get_accel_data               18   2  Code  RX  ESP32.o
  00003270-00003291  esp32_start_ble                    34   2  Code  RX  ESP32.o
  00003292-000032a3  delay                              18   2  Code  RX  main.o
  000032a4-000032b9  delay_ms                           22   2  Code  RX  main.o
  000032ba-000032f7  SystemClockUpdate                  62   2  Code  RX  main.o
  000032f8-00003325  HardFault_Handler                  46   2  Code  RX  main.o
  00003326-000034c3  lcd_draw_line                     414   2  Code  RX  LCD.o
  000034c4-00003539  lcd_draw_time                     118   2  Code  RX  LCD.o
  0000353a-000035af  lcd_test                          118   2  Code  RX  LCD.o
  000035b0-00003769  InitLCDPorts                      442   2  Code  RX  LCD.o
  0000376a-000038db  lcd_config                        370   2  Code  RX  LCD.o
  000038dc-0000391d  EINT0_IRQHandler                   66   2  Code  RX  Interrupts.o
  0000391e-0000395f  EINT2_IRQHandler                   66   2  Code  RX  Interrupts.o
  00003960-00003985  RTC_IRQHandler                     38   2  Code  RX  Interrupts.o
  00003986-000039a3  rtc_interrupt_enable               30   2  Code  RX  Interrupts.o
  000039a4-000039e9  LCD_IRQHandler                     70   2  Code  RX  Interrupts.o
  000039ea-00003a23  lcd_interrupt_enable               58   2  Code  RX  Interrupts.o
  00003a24-00003a6d  esp32_interrupt_enable             74   2  Code  RX  Interrupts.o
  00003a6e-00003a9b  lcd_vfp_interrupt_enable           46   2  Code  RX  Interrupts.o
  00003a9c-00003a9d  PendSV_Handler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003a9e-00003a9f  SysTick_Handler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aa0-00003aa1  WDT_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aa2-00003aa3  TIMER0_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aa4-00003aa5  TIMER1_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aa6-00003aa7  TIMER2_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aa8-00003aa9  TIMER3_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aaa-00003aab  UART0_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aac-00003aad  UART1_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aae-00003aaf  UART2_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ab0-00003ab1  UART3_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ab2-00003ab3  PWM1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ab4-00003ab5  I2C2_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ab6-00003ab7  SPIFI_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ab8-00003ab9  SSP1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aba-00003abb  PLL0_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003abc-00003abd  EINT1_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003abe-00003abf  EINT3_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ac0-00003ac1  ADC_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ac2-00003ac3  BOD_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ac4-00003ac5  USB_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ac6-00003ac7  CAN_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ac8-00003ac9  DMA_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003aca-00003acb  ENET_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003acc-00003acd  MCI_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ace-00003acf  MCPWM_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ad0-00003ad1  QEI_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ad2-00003ad3  PLL1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ad4-00003ad5  USBActivity_IRQHandler              2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ad6-00003ad7  CANActivity_IRQHandler              2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ad8-00003ad9  UART4_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ada-00003adb  SSP2_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003adc-00003add  PWM0_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ade-00003adf  EEPROM_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00003ae0-00003aed  __SEGGER_RTL_float64_isnan
                                                        14   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003aee-00003b27  ldexp(double, int)                 58   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003b28-00003b4d  frexp(double, int*)                38   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003b4e-00003c2b  floor(double)                     222   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003c2c-00003c51  strnlen                            38   2  Code  RX  strops.o (libc_v7m_t_le_eabi_balanced.a)
  00003c52-00003c97  printf_rtt                         70   2  Code  RX  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  00003c98-00003d01  _DoInit                           106   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00003d02-00003d1f  __SEGGER_RTL_print_padding
                                                        30   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00003d20-00003d31  __SEGGER_RTL_pre_padding           18   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00003d32-00003d6b  sprintf                            58   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00003d6c-00003d97  __NVIC_EnableIRQ                   44   2  Code  RX  I2C.o
  00003d98-00003dfb  I2C1_Init                         100   2  Code  RX  I2C.o
  00003dfc-00003edb  I2S_IRQHandler                    224   2  Code  RX  Microphone.o
  00003edc-00003f4b  SSP0_IRQHandler                   112   2  Code  RX  SPI.o
  00003f4c-00003f77  __NVIC_EnableIRQ                   44   2  Code  RX  SPI.o
  00003f78-0000402f  SSPSend                           184   2  Code  RX  SPI.o
  00004030-000040b7  RTCSetTime                        136   2  Code  RX  RTC.o
  000040b8-000040df  RTCStart                           40   2  Code  RX  RTC.o
  000040e0-00004143  RTCGetTime                        100   2  Code  RX  RTC.o
  00004144-000041f3  esp32_read                        176   2  Code  RX  ESP32.o
  000041f4-00004213  delay_short                        32   2  Code  RX  main.o
  00004214-0000426f  main                               92   2  Code  RX  main.o
  00004270-00004473  lcd_draw_text                     516   2  Code  RX  LCD.o
  00004474-000044a3  lcd_draw_pixel                     48   2  Code  RX  LCD.o
  000044a4-000044bb  lcd_init                           24   2  Code  RX  LCD.o
  000044bc-000044ef  __NVIC_DisableIRQ                  52   2  Code  RX  Interrupts.o
  000044f0-0000451b  __NVIC_EnableIRQ                   44   2  Code  RX  Interrupts.o
  0000451c-0000459b  GPIO_IRQHandler                   128   2  Code  RX  Interrupts.o
  0000459c-000045ab  reset_handler                      16   2  Code  RX  LPC1700_Startup.o
  000045ac-000045bf  __SEGGER_RTL_float64_isinf
                                                        20   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  000045c0-000045c3  __SEGGER_RTL_float64_signbit
                                                         4   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  000045c4-0000471f  fmod(double, double)              348   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00004720-00004763  __SEGGER_RTL_float64_normalize
                                                        68   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00004764-0000476b  abs                                 8   2  Code  RX  intops.o (libc_v7m_t_le_eabi_balanced.a)
  0000476c-000047cf  __SEGGER_RTL_pow10                100   2  Code  RX  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  000047d0-000047db  __SEGGER_RTL_stdout_write          12   2  Code  RX  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  000047dc-00004837  SEGGER_RTT_WriteNoLock             92   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00004838-0000484b  _GetAvailWriteSpace                20   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0000484c-0000488b  _WriteNoCheck                      64   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0000488c-000048e3  _WriteBlocking                     88   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  000048e4-00004917  SEGGER_RTT_Write                   52   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00004918-0000492f  __SEGGER_RTL_prin_flush            24   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00004930-000049b3  __SEGGER_RTL_putc                 132   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  000049b4-000049bb  __SEGGER_RTL_init_prin              8   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  000049bc-0000507a  glyph_bitmap                    1 727   1  Cnst  RO  LCD.o
  0000507b-0000507d  [.rodata..L.str]                    3   1  Cnst  RO  Interrupts.o
  0000507e-00005080  [.rodata..L.str.1]                  3   1  Cnst  RO  Interrupts.o
  00005081-00005083  [.rodata..L.str.2]                  3   1  Cnst  RO  Interrupts.o
  00005084-00005086  [.rodata..L.str.3]                  3   1  Cnst  RO  Interrupts.o
  00005087-000050b5  [.rodata..L.str.4]                 47   1  Cnst  RO  Interrupts.o
  000050b6-000050c4  [.rodata..L.str.5]                 15   1  Cnst  RO  Interrupts.o
  000050c5-000050cb  [.rodata.libc..L.str.2]             7   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  000050cc-000050d2  [.rodata.libc..L.str]               7   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  000050d3-000050dc  [.rodata..L.str.3]                 10   1  Cnst  RO  LCD.o
  000050dd-000050e9  [.rodata..L.str]                   13   1  Cnst  RO  main.o
  000050ea-000050f2  [.rodata.libc..L.str]               9   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  000050f3-000050f7  [.rodata.libc..L.str.1]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  000050f8-000050fc  [.rodata.libc..L.str.2]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  000050fd-00005101  [.rodata.libc..L.str.3]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00005102-00005106  [.rodata.libc..L.str.4]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00005107-00005107  ( UNUSED .=.+1 )                    1   -  ----  -   -
  00005108-0000510b  [.init_array]                       4   4  ----  --  LPC1700_Startup.o
  0000510c-0000511b  [.rodata..L.str]                   16   1  Cnst  RO  RAM.o
  0000511c-0000512f  [.rodata..L.str]                   20   1  Cnst  RO  ESP32.o
  00005130-00005143  [.rodata..L.str.1]                 20   1  Cnst  RO  main.o
  00005144-00005147  [.rodata.libc..L.str.1]             4   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00005148-0000514b  [.rodata.libc..L.str.5]             4   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0000514c-0000514f  [.rodata.libc..L.str.6]             4   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00005150-0000515f  __SEGGER_RTL_hex_uc                16   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00005160-0000516f  __SEGGER_RTL_hex_lc                16   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00005170-0000518f  __SEGGER_init_ctors                32   4  Code  RX  SEGGER_crtinit_v7m_little.o
  00005190-000051b3  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  000051b4-000051c7  __SEGGER_init_data__               20   4  Cnst  RO  [ Linker created ]
  000051c8-000051d9  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit_v7m_little.o
  000051da-000051ed  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit_v7m_little.o
  000051ee-0fffffff  ( UNUSED .=.+268414482 )   268 414 482
                                                             -  ----  -   -
  10000000-10007fff  I2SRXBuffer                    32 768   4  Zero  ZI  Microphone.o
  10008000-10008077  _SEGGER_RTT                       120   4  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  10008078-10008097  local_time                         32   4  Zero  ZI  main.o
  10008098-100080a3  I2C_WriteLength                    12   4  Zero  ZI  I2C.o
  100080a4-100080af  I2C_Timeout                        12   4  Zero  ZI  I2C.o
  100080b0-100080bb  I2C_ReadLength                     12   4  Zero  ZI  I2C.o
  100080bc-100080c7  I2C_MasterState                    12   4  Zero  ZI  I2C.o
  100080c8-100080cb  readings_skipped                    4   4  Zero  ZI  Microphone.o
  100080cc-100080cf  interrupt0RxTimeoutStat             4   4  Zero  ZI  SPI.o
  100080d0-100080d3  interrupt0RxStat                    4   4  Zero  ZI  SPI.o
  100080d4-100080d7  interrupt0OverRunStat               4   4  Zero  ZI  SPI.o
  100080d8-100080db  eint0_counter                       4   4  Zero  ZI  Interrupts.o
  100080dc-100080df  alarm_on                            4   4  Zero  ZI  RTC.o
  100080e0-100080e3  WrIndex1                            4   4  Zero  ZI  I2C.o
  100080e4-100080e7  WrIndex0                            4   4  Zero  ZI  I2C.o
  100080e8-100080eb  RdIndex1                            4   4  Zero  ZI  I2C.o
  100080ec-100080ef  RdIndex0                            4   4  Zero  ZI  I2C.o
  100080f0-100080f3  I2SReadLength                       4   4  Zero  ZI  Microphone.o
  100080f4-100080f7  Continue                            4   4  Zero  ZI  main.o
  100080f8-100084f7  _acUpBuffer                     1 024   1  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  100084f8-100085b7  I2C_SlaveBuffer                   192   1  Zero  ZI  I2C.o
  100085b8-10008677  I2C_MasterBuffer                  192   1  Zero  ZI  I2C.o
  10008678-10008687  _acDownBuffer                      16   1  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  10008688-10008688  I2SRXDone                           1   1  Zero  ZI  Microphone.o
  10008689-1000868b  ( UNUSED .=.+3 )                    3   -  ----  -   -
  1000868c-1000868f  lcd_arr                             4   4  Init  RW  LCD.o
  10008690-10008693  USBClock                            4   4  Init  RW  system_LPC177x_8x.o
  10008694-10008697  SystemCoreClock                     4   4  Init  RW  system_LPC177x_8x.o
  10008698-1000869b  PeripheralClock                     4   4  Init  RW  system_LPC177x_8x.o
  1000869c-1000869f  EMCClock                            4   4  Init  RW  system_LPC177x_8x.o
  100086a0-200077ff  ( UNUSED .=.+268431712 )   268 431 712
                                                             -  ----  -   -
  20007800-20007fff  [.bss.block.stack]              2 048   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC_IRQHandler             0x00003AC1                  2  Code  Wk  LPC177x_8x_Vectors.o
  BOD_IRQHandler             0x00003AC3                  2  Code  Wk  LPC177x_8x_Vectors.o
  CANActivity_IRQHandler     0x00003AD7                  2  Code  Wk  LPC177x_8x_Vectors.o
  CAN_IRQHandler             0x00003AC7                  2  Code  Wk  LPC177x_8x_Vectors.o
  DMA_IRQHandler             0x00003AC9                  2  Code  Wk  LPC177x_8x_Vectors.o
  EEPROM_IRQHandler          0x00003ADF                  2  Code  Wk  LPC177x_8x_Vectors.o
  EINT0_IRQHandler           0x000038DD          66      2  Code  Gb  Interrupts.o
  EINT1_IRQHandler           0x00003ABD                  2  Code  Wk  LPC177x_8x_Vectors.o
  EINT2_IRQHandler           0x0000391F          66      2  Code  Gb  Interrupts.o
  EINT3_IRQHandler           0x00003ABF                  2  Code  Wk  LPC177x_8x_Vectors.o
  ENET_IRQHandler            0x00003ACB                  2  Code  Wk  LPC177x_8x_Vectors.o
  GPIO_IRQHandler            0x0000451D         128      2  Code  Gb  Interrupts.o
  HardFault_Handler          0x000032F9          46      2  Code  Gb  main.o
  I2C0_IRQHandler            0x000001D1         868      4  Code  Gb  I2C.o
  I2C1_IRQHandler            0x00000535         892      4  Code  Gb  I2C.o
  I2C1_Init                  0x00003D99         100      2  Code  Gb  I2C.o
  I2C2_IRQHandler            0x00003AB5                  2  Code  Wk  LPC177x_8x_Vectors.o
  I2S_IRQHandler             0x00003DFD         224      2  Code  Gb  Microphone.o
  InitLCDPorts               0x000035B1         442      2  Code  Gb  LCD.o
  LCD_IRQHandler             0x000039A5          70      2  Code  Gb  Interrupts.o
  MCI_IRQHandler             0x00003ACD                  2  Code  Wk  LPC177x_8x_Vectors.o
  MCPWM_IRQHandler           0x00003ACF                  2  Code  Wk  LPC177x_8x_Vectors.o
  NMI_Handler                0x000000E5                  2  Code  Wk  LPC177x_8x_Vectors.o
  PLL0_IRQHandler            0x00003ABB                  2  Code  Wk  LPC177x_8x_Vectors.o
  PLL1_IRQHandler            0x00003AD3                  2  Code  Wk  LPC177x_8x_Vectors.o
  PWM0_IRQHandler            0x00003ADD                  2  Code  Wk  LPC177x_8x_Vectors.o
  PWM1_IRQHandler            0x00003AB3                  2  Code  Wk  LPC177x_8x_Vectors.o
  PendSV_Handler             0x00003A9D                  2  Code  Wk  LPC177x_8x_Vectors.o
  QEI_IRQHandler             0x00003AD1                  2  Code  Wk  LPC177x_8x_Vectors.o
  RTCGetTime                 0x000040E1         100      2  Code  Gb  RTC.o
  RTCSetTime                 0x00004031         136      2  Code  Gb  RTC.o
  RTCStart                   0x000040B9          40      2  Code  Gb  RTC.o
  RTC_IRQHandler             0x00003961          38      2  Code  Gb  Interrupts.o
  RTC_Init                   0x00002CE9         206      2  Code  Gb  RTC.o
  Reset_Handler              0x0000459D                  2  Code  Gb  LPC1700_Startup.o
  SEGGER_RTT_Write           0x000048E5          52      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  SEGGER_RTT_WriteNoLock     0x000047DD          92      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  SPIFI_IRQHandler           0x00003AB7                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSP0_IRQHandler            0x00003EDD         112      2  Code  Gb  SPI.o
  SSP0_Init                  0x00002BA5         186      2  Code  Gb  SPI.o
  SSP1_IRQHandler            0x00003AB9                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSP2_IRQHandler            0x00003ADB                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSPReceive                 0x00002C5F         138      2  Code  Gb  SPI.o
  SSPSend                    0x00003F79         184      2  Code  Gb  SPI.o
  SVC_Handler                0x000000E7                  2  Code  Wk  LPC177x_8x_Vectors.o
  SysTick_Handler            0x00003A9F                  2  Code  Wk  LPC177x_8x_Vectors.o
  SystemClockUpdate          0x000032BB          62      2  Code  Gb  main.o
  SystemCoreClockUpdate      0x00002203       1 274      2  Code  Gb  system_LPC177x_8x.o
  SystemInit                 0x000026FD         298      2  Code  Gb  system_LPC177x_8x.o
  SystemInit_ExtMemCtl       0x00002827         674      2  Code  Lc  system_LPC177x_8x.o
  TIMER0_IRQHandler          0x00003AA3                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER1_IRQHandler          0x00003AA5                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER2_IRQHandler          0x00003AA7                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER3_IRQHandler          0x00003AA9                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART0_IRQHandler           0x00003AAB                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART1_IRQHandler           0x00003AAD                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART2_IRQHandler           0x00003AAF                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART3_IRQHandler           0x00003AB1                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART4_IRQHandler           0x00003AD9                  2  Code  Wk  LPC177x_8x_Vectors.o
  USBActivity_IRQHandler     0x00003AD5                  2  Code  Wk  LPC177x_8x_Vectors.o
  USB_IRQHandler             0x00003AC5                  2  Code  Wk  LPC177x_8x_Vectors.o
  WDT_IRQHandler             0x00003AA1                  2  Code  Wk  LPC177x_8x_Vectors.o
  _DoInit                    0x00003C99         106      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _GetAvailWriteSpace        0x00004839          20      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _WriteBlocking             0x0000488D          88      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _WriteNoCheck              0x0000484D          64      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  __NVIC_DisableIRQ          0x000044BD          52      2  Code  Lc  Interrupts.o
  __NVIC_EnableIRQ           0x00003D6D          44      2  Code  Lc  I2C.o
  __NVIC_EnableIRQ           0x00003F4D          44      2  Code  Lc  SPI.o
  __NVIC_EnableIRQ           0x000044F1          44      2  Code  Lc  Interrupts.o
  __SEGGER_RTL_float64_isinf
                             0x000045AD          20      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_isnan
                             0x00003AE1          14      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_normalize
                             0x00004721          68      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_signbit
                             0x000045C1           4      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_init_prin     0x000049B5           8      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_pow10         0x0000476D         100      2  Code  Gb  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_pre_padding   0x00003D21          18      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush    0x00004919          24      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_print_padding
                             0x00003D03          30      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc          0x00004931         132      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_write  0x000047D1          12      2  Code  Lc  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf      0x00001489       3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_short_float_long
                             0x00001489       3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x000051DB          20      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  __SEGGER_init_ctors        0x00005171          24      4  Code  Wk  SEGGER_crtinit_v7m_little.o
  __SEGGER_init_done         0x00000BBB                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x000051C9          18      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  __aeabi_d2ulz              0x000011E1          62      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dadd               0x00000BC5         574      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpeq             0x00001101          50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpge             0x00001135          60      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpgt             0x00001171          56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmplt             0x000011A9          56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_ddiv               0x00000F3D         450      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dmul               0x00000E0D         304      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dsub               0x00000E05           8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr             0x0000141D         106      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr4            0x0000141D                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr8            0x0000141D                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x000013D1                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x000013DD                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x000013DD                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset             0x0000141F                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset4            0x0000141F                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset8            0x0000141F                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_ul2d               0x00001221          90      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_uldivmod           0x0000127D         206      4  Code  Wk  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  _start                     0x00000BB1          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  abs                        0x00004765           8      2  Code  Wk  intops.o (libc_v7m_t_le_eabi_balanced.a)
  delay                      0x00003293          18      2  Code  Gb  main.o
  delay_ms                   0x000032A5          22      2  Code  Gb  main.o
  delay_short                0x000041F5          32      2  Code  Gb  main.o
  enable_10v_boost           0x000031E7          46      2  Code  Gb  Power.o
  esp32_get_accel_data       0x0000325F          18      2  Code  Gb  ESP32.o
  esp32_init                 0x00003215          74      2  Code  Gb  ESP32.o
  esp32_interrupt_enable     0x00003A25          74      2  Code  Gb  Interrupts.o
  esp32_read                 0x00004145         176      2  Code  Gb  ESP32.o
  esp32_start_ble            0x00003271          34      2  Code  Gb  ESP32.o
  exit                       0x00000BBF           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  floor                      0x00003B4F         222      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  floor(double)              0x00003B4F         222      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  fmod                       0x000045C5         348      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  fmod(double, double)       0x000045C5         348      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexp                      0x00003B29          38      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexp(double, int*)        0x00003B29          38      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  lcd_config                 0x0000376B         370      2  Code  Gb  LCD.o
  lcd_draw_line              0x00003327         414      2  Code  Gb  LCD.o
  lcd_draw_pixel             0x00004475          48      2  Code  Gb  LCD.o
  lcd_draw_text              0x00004271         516      2  Code  Gb  LCD.o
  lcd_draw_time              0x000034C5         118      2  Code  Gb  LCD.o
  lcd_init                   0x000044A5          24      2  Code  Gb  LCD.o
  lcd_interrupt_enable       0x000039EB          58      2  Code  Gb  Interrupts.o
  lcd_test                   0x0000353B         118      2  Code  Gb  LCD.o
  lcd_vfp_interrupt_enable   0x00003A6F          46      2  Code  Gb  Interrupts.o
  ldexp                      0x00003AEF          58      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  ldexp(double, int)         0x00003AEF          58      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  led_flash                  0x00002B6B          58      2  Code  Gb  LEDs.o
  led_green_off              0x00002B59          18      2  Code  Gb  LEDs.o
  led_green_on               0x00002B47          18      2  Code  Gb  LEDs.o
  led_init                   0x00002AC9         126      2  Code  Gb  LEDs.o
  led_status                 0x00002185         126      4  Code  Gb  LEDs.o
  main                       0x00004215          92      2  Code  Gb  main.o
  memcpy                     0x000013D1          76      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  memset                     0x00001425                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  printf                     0x00003C53          70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  printf_rtt                 0x00003C53          70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  ram_init                   0x00002DB7       1 002      2  Code  Gb  RAM.o
  ram_write_init             0x000031A1          70      2  Code  Gb  RAM.o
  reset_handler              0x0000459D                  2  Code  Gb  LPC1700_Startup.o
  rtc_interrupt_enable       0x00003987          30      2  Code  Gb  Interrupts.o
  sprintf                    0x00003D33          58      2  Code  Wk  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  strcpy                     0x0000134D          56      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  strlen                     0x00001385          74      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  strnlen                    0x00003C2D          38      2  Code  Wk  strops.o (libc_v7m_t_le_eabi_balanced.a)

Function symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x000000E5  NMI_Handler                                2  Code  Wk  LPC177x_8x_Vectors.o
  0x000000E7  SVC_Handler                                2  Code  Wk  LPC177x_8x_Vectors.o
  0x000001D1  I2C0_IRQHandler                   868      4  Code  Gb  I2C.o
  0x00000535  I2C1_IRQHandler                   892      4  Code  Gb  I2C.o
  0x00000BB1  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x00000BBB  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x00000BBF  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x00000BC5  __aeabi_dadd                      574      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000E05  __aeabi_dsub                        8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000E0D  __aeabi_dmul                      304      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000F3D  __aeabi_ddiv                      450      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001101  __aeabi_dcmpeq                     50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001135  __aeabi_dcmpge                     60      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001171  __aeabi_dcmpgt                     56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000011A9  __aeabi_dcmplt                     56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000011E1  __aeabi_d2ulz                      62      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001221  __aeabi_ul2d                       90      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000127D  __aeabi_uldivmod                  206      4  Code  Wk  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000134D  strcpy                             56      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001385  strlen                             74      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000013D1  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000013D1  memcpy                             76      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000013DD  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000013DD  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000141D  __aeabi_memclr                    106      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000141D  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000141D  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000141F  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000141F  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000141F  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001425  memset                                     4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001489  __SEGGER_RTL_vfprintf           3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001489  __SEGGER_RTL_vfprintf_short_float_long
                                              3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x00002185  led_status                        126      4  Code  Gb  LEDs.o
  0x00002203  SystemCoreClockUpdate           1 274      2  Code  Gb  system_LPC177x_8x.o
  0x000026FD  SystemInit                        298      2  Code  Gb  system_LPC177x_8x.o
  0x00002827  SystemInit_ExtMemCtl              674      2  Code  Lc  system_LPC177x_8x.o
  0x00002AC9  led_init                          126      2  Code  Gb  LEDs.o
  0x00002B47  led_green_on                       18      2  Code  Gb  LEDs.o
  0x00002B59  led_green_off                      18      2  Code  Gb  LEDs.o
  0x00002B6B  led_flash                          58      2  Code  Gb  LEDs.o
  0x00002BA5  SSP0_Init                         186      2  Code  Gb  SPI.o
  0x00002C5F  SSPReceive                        138      2  Code  Gb  SPI.o
  0x00002CE9  RTC_Init                          206      2  Code  Gb  RTC.o
  0x00002DB7  ram_init                        1 002      2  Code  Gb  RAM.o
  0x000031A1  ram_write_init                     70      2  Code  Gb  RAM.o
  0x000031E7  enable_10v_boost                   46      2  Code  Gb  Power.o
  0x00003215  esp32_init                         74      2  Code  Gb  ESP32.o
  0x0000325F  esp32_get_accel_data               18      2  Code  Gb  ESP32.o
  0x00003271  esp32_start_ble                    34      2  Code  Gb  ESP32.o
  0x00003293  delay                              18      2  Code  Gb  main.o
  0x000032A5  delay_ms                           22      2  Code  Gb  main.o
  0x000032BB  SystemClockUpdate                  62      2  Code  Gb  main.o
  0x000032F9  HardFault_Handler                  46      2  Code  Gb  main.o
  0x00003327  lcd_draw_line                     414      2  Code  Gb  LCD.o
  0x000034C5  lcd_draw_time                     118      2  Code  Gb  LCD.o
  0x0000353B  lcd_test                          118      2  Code  Gb  LCD.o
  0x000035B1  InitLCDPorts                      442      2  Code  Gb  LCD.o
  0x0000376B  lcd_config                        370      2  Code  Gb  LCD.o
  0x000038DD  EINT0_IRQHandler                   66      2  Code  Gb  Interrupts.o
  0x0000391F  EINT2_IRQHandler                   66      2  Code  Gb  Interrupts.o
  0x00003961  RTC_IRQHandler                     38      2  Code  Gb  Interrupts.o
  0x00003987  rtc_interrupt_enable               30      2  Code  Gb  Interrupts.o
  0x000039A5  LCD_IRQHandler                     70      2  Code  Gb  Interrupts.o
  0x000039EB  lcd_interrupt_enable               58      2  Code  Gb  Interrupts.o
  0x00003A25  esp32_interrupt_enable             74      2  Code  Gb  Interrupts.o
  0x00003A6F  lcd_vfp_interrupt_enable           46      2  Code  Gb  Interrupts.o
  0x00003A9D  PendSV_Handler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003A9F  SysTick_Handler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AA1  WDT_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AA3  TIMER0_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AA5  TIMER1_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AA7  TIMER2_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AA9  TIMER3_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AAB  UART0_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AAD  UART1_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AAF  UART2_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AB1  UART3_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AB3  PWM1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AB5  I2C2_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AB7  SPIFI_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AB9  SSP1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ABB  PLL0_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ABD  EINT1_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ABF  EINT3_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AC1  ADC_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AC3  BOD_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AC5  USB_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AC7  CAN_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AC9  DMA_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ACB  ENET_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ACD  MCI_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ACF  MCPWM_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AD1  QEI_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AD3  PLL1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AD5  USBActivity_IRQHandler                     2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AD7  CANActivity_IRQHandler                     2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AD9  UART4_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ADB  SSP2_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ADD  PWM0_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003ADF  EEPROM_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003AE1  __SEGGER_RTL_float64_isnan
                                                 14      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003AEF  ldexp                              58      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003AEF  ldexp(double, int)                 58      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003B29  frexp                              38      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003B29  frexp(double, int*)                38      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003B4F  floor                             222      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003B4F  floor(double)                     222      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003C2D  strnlen                            38      2  Code  Wk  strops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003C53  printf                             70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003C53  printf_rtt                         70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003C99  _DoInit                           106      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003D03  __SEGGER_RTL_print_padding
                                                 30      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003D21  __SEGGER_RTL_pre_padding           18      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003D33  sprintf                            58      2  Code  Wk  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003D6D  __NVIC_EnableIRQ                   44      2  Code  Lc  I2C.o
  0x00003D99  I2C1_Init                         100      2  Code  Gb  I2C.o
  0x00003DFD  I2S_IRQHandler                    224      2  Code  Gb  Microphone.o
  0x00003EDD  SSP0_IRQHandler                   112      2  Code  Gb  SPI.o
  0x00003F4D  __NVIC_EnableIRQ                   44      2  Code  Lc  SPI.o
  0x00003F79  SSPSend                           184      2  Code  Gb  SPI.o
  0x00004031  RTCSetTime                        136      2  Code  Gb  RTC.o
  0x000040B9  RTCStart                           40      2  Code  Gb  RTC.o
  0x000040E1  RTCGetTime                        100      2  Code  Gb  RTC.o
  0x00004145  esp32_read                        176      2  Code  Gb  ESP32.o
  0x000041F5  delay_short                        32      2  Code  Gb  main.o
  0x00004215  main                               92      2  Code  Gb  main.o
  0x00004271  lcd_draw_text                     516      2  Code  Gb  LCD.o
  0x00004475  lcd_draw_pixel                     48      2  Code  Gb  LCD.o
  0x000044A5  lcd_init                           24      2  Code  Gb  LCD.o
  0x000044BD  __NVIC_DisableIRQ                  52      2  Code  Lc  Interrupts.o
  0x000044F1  __NVIC_EnableIRQ                   44      2  Code  Lc  Interrupts.o
  0x0000451D  GPIO_IRQHandler                   128      2  Code  Gb  Interrupts.o
  0x0000459D  Reset_Handler                              2  Code  Gb  LPC1700_Startup.o
  0x0000459D  reset_handler                              2  Code  Gb  LPC1700_Startup.o
  0x000045AD  __SEGGER_RTL_float64_isinf
                                                 20      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000045C1  __SEGGER_RTL_float64_signbit
                                                  4      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000045C5  fmod                              348      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000045C5  fmod(double, double)              348      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004721  __SEGGER_RTL_float64_normalize
                                                 68      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004765  abs                                 8      2  Code  Wk  intops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000476D  __SEGGER_RTL_pow10                100      2  Code  Gb  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000047D1  __SEGGER_RTL_stdout_write          12      2  Code  Lc  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x000047DD  SEGGER_RTT_WriteNoLock             92      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004839  _GetAvailWriteSpace                20      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000484D  _WriteNoCheck                      64      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000488D  _WriteBlocking                     88      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x000048E5  SEGGER_RTT_Write                   52      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004919  __SEGGER_RTL_prin_flush            24      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004931  __SEGGER_RTL_putc                 132      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000049B5  __SEGGER_RTL_init_prin              8      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00005171  __SEGGER_init_ctors                24      4  Code  Wk  SEGGER_crtinit_v7m_little.o
  0x000051C9  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  0x000051DB  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit_v7m_little.o

Read-write data symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  Continue                   0x100080F4           4      4  Zero  Gb  main.o
  EMCClock                   0x1000869C           4      4  Init  Gb  system_LPC177x_8x.o
  I2C_MasterBuffer           0x100085B8         192         Zero  Gb  I2C.o
  I2C_MasterState            0x100080BC          12      4  Zero  Gb  I2C.o
  I2C_ReadLength             0x100080B0          12      4  Zero  Gb  I2C.o
  I2C_SlaveBuffer            0x100084F8         192         Zero  Gb  I2C.o
  I2C_Timeout                0x100080A4          12      4  Zero  Gb  I2C.o
  I2C_WriteLength            0x10008098          12      4  Zero  Gb  I2C.o
  I2SRXBuffer                0x10000000      32 768      4  Zero  Gb  Microphone.o
  I2SRXDone                  0x10008688           1         Zero  Gb  Microphone.o
  I2SReadLength              0x100080F0           4      4  Zero  Gb  Microphone.o
  PeripheralClock            0x10008698           4      4  Init  Gb  system_LPC177x_8x.o
  RdIndex0                   0x100080EC           4      4  Zero  Gb  I2C.o
  RdIndex1                   0x100080E8           4      4  Zero  Gb  I2C.o
  SystemCoreClock            0x10008694           4      4  Init  Gb  system_LPC177x_8x.o
  USBClock                   0x10008690           4      4  Init  Gb  system_LPC177x_8x.o
  WrIndex0                   0x100080E4           4      4  Zero  Gb  I2C.o
  WrIndex1                   0x100080E0           4      4  Zero  Gb  I2C.o
  _SEGGER_RTT                0x10008000         120      4  Zero  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _acDownBuffer              0x10008678          16         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _acUpBuffer                0x100080F8       1 024         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  alarm_on                   0x100080DC           4      4  Zero  Gb  RTC.o
  eint0_counter              0x100080D8           4      4  Zero  Gb  Interrupts.o
  interrupt0OverRunStat      0x100080D4           4      4  Zero  Gb  SPI.o
  interrupt0RxStat           0x100080D0           4      4  Zero  Gb  SPI.o
  interrupt0RxTimeoutStat    0x100080CC           4      4  Zero  Gb  SPI.o
  lcd_arr                    0x1000868C           4      4  Init  Gb  LCD.o
  local_time                 0x10008078          32      4  Zero  Gb  main.o
  readings_skipped           0x100080C8           4      4  Zero  Gb  Microphone.o

Read-write data symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x10000000  I2SRXBuffer                    32 768      4  Zero  Gb  Microphone.o
  0x10008000  _SEGGER_RTT                       120      4  Zero  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x10008078  local_time                         32      4  Zero  Gb  main.o
  0x10008098  I2C_WriteLength                    12      4  Zero  Gb  I2C.o
  0x100080A4  I2C_Timeout                        12      4  Zero  Gb  I2C.o
  0x100080B0  I2C_ReadLength                     12      4  Zero  Gb  I2C.o
  0x100080BC  I2C_MasterState                    12      4  Zero  Gb  I2C.o
  0x100080C8  readings_skipped                    4      4  Zero  Gb  Microphone.o
  0x100080CC  interrupt0RxTimeoutStat             4      4  Zero  Gb  SPI.o
  0x100080D0  interrupt0RxStat                    4      4  Zero  Gb  SPI.o
  0x100080D4  interrupt0OverRunStat               4      4  Zero  Gb  SPI.o
  0x100080D8  eint0_counter                       4      4  Zero  Gb  Interrupts.o
  0x100080DC  alarm_on                            4      4  Zero  Gb  RTC.o
  0x100080E0  WrIndex1                            4      4  Zero  Gb  I2C.o
  0x100080E4  WrIndex0                            4      4  Zero  Gb  I2C.o
  0x100080E8  RdIndex1                            4      4  Zero  Gb  I2C.o
  0x100080EC  RdIndex0                            4      4  Zero  Gb  I2C.o
  0x100080F0  I2SReadLength                       4      4  Zero  Gb  Microphone.o
  0x100080F4  Continue                            4      4  Zero  Gb  main.o
  0x100080F8  _acUpBuffer                     1 024         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x100084F8  I2C_SlaveBuffer                   192         Zero  Gb  I2C.o
  0x100085B8  I2C_MasterBuffer                  192         Zero  Gb  I2C.o
  0x10008678  _acDownBuffer                      16         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x10008688  I2SRXDone                           1         Zero  Gb  Microphone.o
  0x1000868C  lcd_arr                             4      4  Init  Gb  LCD.o
  0x10008690  USBClock                            4      4  Init  Gb  system_LPC177x_8x.o
  0x10008694  SystemCoreClock                     4      4  Init  Gb  system_LPC177x_8x.o
  0x10008698  PeripheralClock                     4      4  Init  Gb  system_LPC177x_8x.o
  0x1000869C  EMCClock                            4      4  Init  Gb  system_LPC177x_8x.o

Read-only data symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __SEGGER_RTL_aPower2       0x000000E8          72      8  Cnst  Lc  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_lc        0x00005160          16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_uc        0x00005150          16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ipow10        0x00000130         160      8  Cnst  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_init_data__       0x000051B4        [20]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x00005190        [36]      4  Cnst  Lc  [ Linker created ]
  glyph_bitmap               0x000049BC       1 727         Cnst  Lc  LCD.o
  glyph_dsc                  0x000008B0         768      4  Cnst  Lc  LCD.o

Read-only data symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x000000E8  __SEGGER_RTL_aPower2               72      8  Cnst  Lc  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000130  __SEGGER_RTL_ipow10               160      8  Cnst  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000008B0  glyph_dsc                         768      4  Cnst  Lc  LCD.o
  0x000049BC  glyph_bitmap                    1 727         Cnst  Lc  LCD.o
  0x00005150  __SEGGER_RTL_hex_uc                16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x00005160  __SEGGER_RTL_hex_lc                16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x00005190  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x000051B4  __SEGGER_init_data__             [20]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name and then by address:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x00080000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00080000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x00000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x000051EE                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x000051EE                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x00000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x00080000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00080000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x00000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x000051EE                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x000051EE                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x00000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x10010000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00010000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x10000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x100086A0                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x000086A0                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x10000000                     ----  Gb  [ Linker created ]
  __RAM2_segment_end__       0x20008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_size__      0x00008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_end__  0x20008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_size__
                             0x00000800                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_start__
                             0x20007800                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20008000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x10008000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x10000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20008000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x10008000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x10000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000800                     ----  Gb  [ Linker created ]
  __ctors_end__              0x0000510C                     ----  Gb  [ Linker created ]
  __ctors_start__            0x00005108                     ----  Gb  [ Linker created ]
  __stack_end__              0x20008000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x00000000       [228]    256  Code  Gb  LPC177x_8x_Vectors.o
  _vectors_end               0x000000E4                256  Code  Lc  LPC177x_8x_Vectors.o

Untyped symbols by address and then by name:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x00000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000000  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  _vectors                        [228]    256  Code  Gb  LPC177x_8x_Vectors.o
  0x000000E4  _vectors_end                             256  Code  Lc  LPC177x_8x_Vectors.o
  0x00000800  __RAM2_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00000800  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x00005108  __ctors_start__                               ----  Gb  [ Linker created ]
  0x0000510C  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x000051EE  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x000051EE  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x000051EE  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x000051EE  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00008000  __RAM2_segment_size__                         ----  Gb  [ Linker created ]
  0x000086A0  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00010000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x00080000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x00080000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x00080000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x00080000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x10000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x10000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x10000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x10000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x10008000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x10008000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x100086A0  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x10010000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]
  0x20000000  __RAM2_segment_start__                        ----  Gb  [ Linker created ]
  0x20007800  __RAM2_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20008000  __RAM2_segment_end__                          ----  Gb  [ Linker created ]
  0x20008000  __RAM2_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20008000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20008000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20008000  __stack_end__                                 ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

   17 946 bytes read-only  code
    3 023 bytes read-only  data
   36 509 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       00000000-0007ffff      524 288       20 973   4.00%      503 315  96.00%            0   0.00%
  RAM1        10000000-1000ffff       65 536       34 461  52.58%       31 075  47.42%            0   0.00%
  RAM2        20000000-20007fff       32 768        2 048   6.25%       30 720  93.75%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
