***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.14.0 compiled Aug 26 2021 19:08:15
  Copyright (c) 2017-2021 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Accelerometer.o                                       382                                    
  CommonTables.o                                                 87 272                        
  ComplexMathFunctions.o                                128                                    
  Cube.o                                                                                      7
  ESP32.o                                               286                                    
  FFT.o                                                 210                      12       4 125
  I2C.o                                               1 904                                 448
  Interrupts.o                                          656          27                       4
  LCD.o                                               4 464       2 536           4       8 193
  LEDs.o                                                346                                    
  LPC1700_Startup.o                                      16                                    
  LPC177x_8x_Vectors.o                                  298                                    
  Microphone.o                                        1 230                              11 001
  Physics.o                                           1 676          99                     281
  Power.o                                                46                                    
  RAM.o                                               1 060                                    
  RTC.o                                                 482                                   4
  SEGGER_THUMB_Startup.o                                 20                                    
  SEGGER_crtinit_v7m_little.o                            70                                    
  SPI.o                                                 664                                  12
  StatisticsFunctions.o                                  92                                    
  TransformFunctions.o                                6 156                                    
  main.o                                                302          33                      68
  system_LPC177x_8x.o                                 2 246                      16            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (24 objects)                              22 734      89 967          32      24 143
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v7m_t_le_eabi_balanced.a                      10 442       1 119                   1 160
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (1 archives)                              10 442       1 119                   1 160
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       68                   2 048
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             33 176      91 154          32      27 351
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)          422          20                   1 160
  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
                                                      3 324          67                        
  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                      2 932                                    
  floatops.o (libc_v7m_t_le_eabi_balanced.a)          2 742         800                        
  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                        208                                    
  intops.o (libc_v7m_t_le_eabi_balanced.a)                8                                    
  prinops.o (libc_v7m_t_le_eabi_balanced.a)             270         160                        
  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
                                                         82                                    
  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                        316                                    
  strops.o (libc_v7m_t_le_eabi_balanced.a)               38                                    
  utilops.o (libc_v7m_t_le_eabi_balanced.a)             100          72                        
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (11 members from 1 archives)              10 442       1 119                   1 160
  Objects (24 files)                                 22 734      89 967          32      24 143
  Linker created (shared data, fills, blocks):                       68                   2 048
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             33 176      91 154          32      27 351
  =============================================  ==========  ==========  ==========  ==========

Detailed memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               68                        
  Memory for block 'stack'                                                                2 048
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         68                   2 048
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (24 files)                                 22 734      89 967          32      24 143
  Archives (1 files)                                 10 442       1 119                   1 160
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             33 176      91 154          32      27 351
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  00000000-000000e3  _vectors                          228  256
                                                                Code  RX  LPC177x_8x_Vectors.o
  000000e4-000000e5  NMI_Handler                         2   2  Code  RX  LPC177x_8x_Vectors.o
  000000e6-000000e7  SVC_Handler                         2   2  Code  RX  LPC177x_8x_Vectors.o
  000000e8-00000127  __SEGGER_RTL_float64_SinCos
                                                        64   8  Cnst  RO  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00000128-00000187  __SEGGER_RTL_float64_ATan          96   8  Cnst  RO  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00000188-000001cf  __SEGGER_RTL_aPower2               72   8  Cnst  RO  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  000001d0-0000026f  __SEGGER_RTL_ipow10               160   8  Cnst  RO  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00000270-000005d3  I2C0_IRQHandler                   868   4  Code  RX  I2C.o
  000005d4-0000094f  I2C1_IRQHandler                   892   4  Code  RX  I2C.o
  00000950-00000c4f  glyph_dsc                         768   4  Cnst  RO  LCD.o
  00000c50-00000ccf  twiddleCoef_16                    128   4  Cnst  RO  CommonTables.o
  00000cd0-00000dcf  twiddleCoef_32                    256   4  Cnst  RO  CommonTables.o
  00000dd0-00000fcf  twiddleCoef_64                    512   4  Cnst  RO  CommonTables.o
  00000fd0-000013cf  twiddleCoef_128                 1 024   4  Cnst  RO  CommonTables.o
  000013d0-00001bcf  twiddleCoef_256                 2 048   4  Cnst  RO  CommonTables.o
  00001bd0-00002bcf  twiddleCoef_512                 4 096   4  Cnst  RO  CommonTables.o
  00002bd0-00004bcf  twiddleCoef_1024                8 192   4  Cnst  RO  CommonTables.o
  00004bd0-00008bcf  twiddleCoef_2048               16 384   4  Cnst  RO  CommonTables.o
  00008bd0-00010bcf  twiddleCoef_4096               32 768   4  Cnst  RO  CommonTables.o
  00010bd0-00010bdf  arm_cfft_sR_f32_len16              16   4  Cnst  RO  CommonTables.o
  00010be0-00010bef  arm_cfft_sR_f32_len32              16   4  Cnst  RO  CommonTables.o
  00010bf0-00010bff  arm_cfft_sR_f32_len64              16   4  Cnst  RO  CommonTables.o
  00010c00-00010c0f  arm_cfft_sR_f32_len128             16   4  Cnst  RO  CommonTables.o
  00010c10-00010c1f  arm_cfft_sR_f32_len256             16   4  Cnst  RO  CommonTables.o
  00010c20-00010c2f  arm_cfft_sR_f32_len512             16   4  Cnst  RO  CommonTables.o
  00010c30-00010c3f  arm_cfft_sR_f32_len1024            16   4  Cnst  RO  CommonTables.o
  00010c40-00010c4f  arm_cfft_sR_f32_len2048            16   4  Cnst  RO  CommonTables.o
  00010c50-00010c5f  arm_cfft_sR_f32_len4096            16   4  Cnst  RO  CommonTables.o
  00010c60-00010c73  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  00010c74-00010d83  __aeabi_fadd                      272   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00010d84-00010fc3  __aeabi_dadd                      576   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00010fc4-00010fcb  __aeabi_fsub                        8   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00010fcc-00010fd3  __aeabi_dsub                        8   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00010fd4-00011097  __aeabi_fmul                      196   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011098-000111c7  __aeabi_dmul                      304   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000111c8-00011293  __aeabi_fdiv                      204   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011294-00011457  __aeabi_ddiv                      452   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011458-0001148b  __aeabi_dcmpeq                     52   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0001148c-000114bf  __aeabi_fcmpge                     52   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000114c0-000114fb  __aeabi_dcmpge                     60   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000114fc-0001152b  __aeabi_fcmpgt                     48   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0001152c-00011563  __aeabi_dcmpgt                     56   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011564-00011593  __aeabi_fcmplt                     48   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011594-000115cb  __aeabi_dcmplt                     56   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000115cc-000115ff  __aeabi_f2iz                       52   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011600-0001164b  __aeabi_d2iz                       76   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0001164c-0001168b  __aeabi_d2ulz                      64   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0001168c-000116bb  __aeabi_i2f                        48   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000116bc-000116e3  __aeabi_i2d                        40   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000116e4-0001170b  __aeabi_ui2f                       40   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0001170c-00011767  __aeabi_ul2d                       92   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011768-0001179b  __aeabi_f2d                        52   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0001179c-000117e7  __aeabi_d2f                        76   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000117e8-000118e7  __SEGGER_RTL_kahan_aT2            256   4  Cnst  RO  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  000118e8-000119b7  __aeabi_uldivmod                  208   4  Code  RX  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000119b8-000119ef  strcpy                             56   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000119f0-00011a3b  strlen                             76   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011a3c-00011a87  memcpy                             76   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011a88-00011af3  __aeabi_memclr                    108   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00011af4-000127ef  __SEGGER_RTL_vfprintf_short_float_long
                                                     3 324   4  Code  RX  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  000127f0-0001286d  led_status                        126   4  Code  RX  LEDs.o
  0001286e-00012d67  SystemCoreClockUpdate           1 274   2  Code  RX  system_LPC177x_8x.o
  00012d68-00012e91  SystemInit                        298   2  Code  RX  system_LPC177x_8x.o
  00012e92-00013133  SystemInit_ExtMemCtl              674   2  Code  RX  system_LPC177x_8x.o
  00013134-000131b1  acc_read                          126   2  Code  RX  Accelerometer.o
  000131b2-0001322f  led_init                          126   2  Code  RX  LEDs.o
  00013230-00013241  led_green_on                       18   2  Code  RX  LEDs.o
  00013242-00013253  led_green_off                      18   2  Code  RX  LEDs.o
  00013254-0001328d  led_flash                          58   2  Code  RX  LEDs.o
  0001328e-000132c3  mic_init                           54   2  Code  RX  Microphone.o
  000132c4-00013325  mic_pwr_on                         98   2  Code  RX  Microphone.o
  00013326-00013447  mic_take_measurements             290   2  Code  RX  Microphone.o
  00013448-00013489  I2S_Init                           66   2  Code  RX  Microphone.o
  0001348a-000134cf  I2S_Start                          70   2  Code  RX  Microphone.o
  000134d0-000135c1  I2S_IRQHandler                    242   2  Code  RX  Microphone.o
  000135c2-000135d3  I2S_DeInit                         18   2  Code  RX  Microphone.o
  000135d4-0001368d  SSP0_Init                         186   2  Code  RX  SPI.o
  0001368e-00013717  SSPReceive                        138   2  Code  RX  SPI.o
  00013718-000137e5  RTC_Init                          206   2  Code  RX  RTC.o
  000137e6-00013bc3  ram_init                          990   2  Code  RX  RAM.o
  00013bc4-00013c09  ram_write_init                     70   2  Code  RX  RAM.o
  00013c0a-00013c37  enable_10v_boost                   46   2  Code  RX  Power.o
  00013c38-00013cb5  esp32_read                        126   2  Code  RX  ESP32.o
  00013cb6-00013cc7  delay                              18   2  Code  RX  main.o
  00013cc8-00013cdd  delay_ms                           22   2  Code  RX  main.o
  00013cde-00013d1b  SystemClockUpdate                  62   2  Code  RX  main.o
  00013d1c-00013d49  HardFault_Handler                  46   2  Code  RX  main.o
  00013d4a-00013da3  main                               90   2  Code  RX  main.o
  00013da4-00013e1d  lcd_draw_time                     122   2  Code  RX  LCD.o
  00013e1e-00013e93  lcd_test                          118   2  Code  RX  LCD.o
  00013e94-00014031  lcd_draw_line                     414   2  Code  RX  LCD.o
  00014032-00014107  lcd_draw_circle                   214   2  Code  RX  LCD.o
  00014108-000142c1  InitLCDPorts                      442   2  Code  RX  LCD.o
  000142c2-00014383  lcd_draw_audio_graph              194   2  Code  RX  LCD.o
  00014384-000143c5  EINT0_IRQHandler                   66   2  Code  RX  Interrupts.o
  000143c6-00014407  EINT2_IRQHandler                   66   2  Code  RX  Interrupts.o
  00014408-00014415  timer0_interrupt_enable            14   2  Code  RX  Interrupts.o
  00014416-0001443b  RTC_IRQHandler                     38   2  Code  RX  Interrupts.o
  0001443c-00014459  rtc_interrupt_enable               30   2  Code  RX  Interrupts.o
  0001445a-000144c7  LCD_IRQHandler                    110   2  Code  RX  Interrupts.o
  000144c8-00014501  lcd_touch_interrupt_enable
                                                        58   2  Code  RX  Interrupts.o
  00014502-0001452f  lcd_vfp_interrupt_enable           46   2  Code  RX  Interrupts.o
  00014530-0001456d  physics_distance                   62   2  Code  RX  Physics.o
  0001456e-00014857  physics_calculate_direction_collision
                                                       746   2  Code  RX  Physics.o
  00014858-000148e1  arm_bitreversal_32                138   2  Code  RX  TransformFunctions.o
  000148e2-00014a07  arm_cfft_f32                      294   2  Code  RX  TransformFunctions.o
  00014a08-00014ad9  fft_test                          210   2  Code  RX  FFT.o
  00014ada-00014adb  PendSV_Handler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014adc-00014add  SysTick_Handler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014ade-00014adf  WDT_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014ae0-00014ae1  TIMER1_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00014ae2-00014ae3  TIMER2_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00014ae4-00014ae5  TIMER3_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00014ae6-00014ae7  UART0_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014ae8-00014ae9  UART1_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014aea-00014aeb  UART2_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014aec-00014aed  UART3_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014aee-00014aef  PWM1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014af0-00014af1  I2C2_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014af2-00014af3  SPIFI_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014af4-00014af5  SSP1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014af6-00014af7  PLL0_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014af8-00014af9  EINT1_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014afa-00014afb  EINT3_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014afc-00014afd  ADC_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014afe-00014aff  BOD_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b00-00014b01  USB_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b02-00014b03  CAN_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b04-00014b05  DMA_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b06-00014b07  ENET_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b08-00014b09  MCI_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b0a-00014b0b  MCPWM_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b0c-00014b0d  QEI_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b0e-00014b0f  PLL1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b10-00014b11  USBActivity_IRQHandler              2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b12-00014b13  CANActivity_IRQHandler              2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b14-00014b15  UART4_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b16-00014b17  SSP2_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b18-00014b19  PWM0_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b1a-00014b1b  EEPROM_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  00014b1c-00014b29  __SEGGER_RTL_float64_isnan
                                                        14   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00014b2a-00014b53  ldexp(float, int)                  42   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00014b54-00014b8d  ldexp(double, int)                 58   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00014b8e-00014bb3  frexp(double, int*)                38   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00014bb4-00014c91  floor(double)                     222   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00014c92-00014d8f  cos(double)                       254   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00014d90-00014f09  atan(double)                      378   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00014f0a-00015097  atan2(double, double)             398   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00015098-000151ad  sqrt(double)                      278   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  000151ae-000151fb  __SEGGER_RTL_float64_PolyEvalP
                                                        78   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  000151fc-00015249  __SEGGER_RTL_float64_PolyEvalQ
                                                        78   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001524a-0001526f  strnlen                            38   2  Code  RX  strops.o (libc_v7m_t_le_eabi_balanced.a)
  00015270-000152b5  printf_rtt                         70   2  Code  RX  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  000152b6-0001531f  _DoInit                           106   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00015320-0001533d  __SEGGER_RTL_print_padding
                                                        30   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0001533e-0001534f  __SEGGER_RTL_pre_padding           18   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00015350-00015389  sprintf                            58   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0001538a-000153cd  acc_read_xyz                       68   2  Code  RX  Accelerometer.o
  000153ce-00015489  acc_calculate_xyz_angles          188   2  Code  RX  Accelerometer.o
  0001548a-000154b5  __NVIC_EnableIRQ                   44   2  Code  RX  I2C.o
  000154b6-00015519  I2C1_Init                         100   2  Code  RX  I2C.o
  0001551a-00015545  __NVIC_EnableIRQ                   44   2  Code  RX  Microphone.o
  00015546-00015591  I2S_Config                         76   2  Code  RX  Microphone.o
  00015592-000155e5  I2S_IRQConfig                      84   2  Code  RX  Microphone.o
  000155e6-00015651  I2S_IRQCmd                        108   2  Code  RX  Microphone.o
  00015652-00015681  I2S_Stop                           48   2  Code  RX  Microphone.o
  00015682-000156a1  mic_start_fft                      32   2  Code  RX  Microphone.o
  000156a2-00015711  SSP0_IRQHandler                   112   2  Code  RX  SPI.o
  00015712-0001573d  __NVIC_EnableIRQ                   44   2  Code  RX  SPI.o
  0001573e-000157f5  SSPSend                           184   2  Code  RX  SPI.o
  000157f6-0001587d  RTCSetTime                        136   2  Code  RX  RTC.o
  0001587e-000158a5  RTCStart                           40   2  Code  RX  RTC.o
  000158a6-00015909  RTCGetTime                        100   2  Code  RX  RTC.o
  0001590a-00015949  esp32_init                         64   2  Code  RX  ESP32.o
  0001594a-000159a9  esp32_get_accel_data               96   2  Code  RX  ESP32.o
  000159aa-000159c9  delay_long                         32   2  Code  RX  main.o
  000159ca-000159e9  delay_short                        32   2  Code  RX  main.o
  000159ea-00015bed  lcd_draw_text                     516   2  Code  RX  LCD.o
  00015bee-00015c1d  lcd_draw_pixel                     48   2  Code  RX  LCD.o
  00015c1e-00015d2d  lcd_draw_rectangle                272   2  Code  RX  LCD.o
  00015d2e-00015d45  lcd_init                           24   2  Code  RX  LCD.o
  00015d46-00015eb5  lcd_config                        368   2  Code  RX  LCD.o
  00015eb6-00015f9d  lcd_draw_fft_graph                232   2  Code  RX  LCD.o
  00015f9e-00016119  lcd_draw_fft_bins                 380   2  Code  RX  LCD.o
  0001611a-000161b5  lcd_clear_fft_graph               156   2  Code  RX  LCD.o
  000161b6-0001643d  lcd_draw_audio_signal             648   2  Code  RX  LCD.o
  0001643e-000164d9  lcd_clear_audio_signal            156   2  Code  RX  LCD.o
  000164da-00016579  lcd_fft_draw_buttons              160   2  Code  RX  LCD.o
  0001657a-00016599  TIMER0_IRQHandler                  32   2  Code  RX  Interrupts.o
  0001659a-000165cd  __NVIC_DisableIRQ                  52   2  Code  RX  Interrupts.o
  000165ce-000165f9  __NVIC_EnableIRQ                   44   2  Code  RX  Interrupts.o
  000165fa-0001665d  GPIO_IRQHandler                   100   2  Code  RX  Interrupts.o
  0001665e-000166ad  physics_draw_bodies                80   2  Code  RX  Physics.o
  000166ae-000166fd  physics_erase_bodies               80   2  Code  RX  Physics.o
  000166fe-000168a5  physics_calculate_position
                                                       424   2  Code  RX  Physics.o
  000168a6-0001693d  physics_detect_body_collision
                                                       152   2  Code  RX  Physics.o
  0001693e-000169a1  physics_new_to_old                100   2  Code  RX  Physics.o
  000169a2-000169c1  physics_interrupt_operations
                                                        32   2  Code  RX  Physics.o
  000169c2-000169e9  armBitRevIndexTable16              40   2  Cnst  RO  CommonTables.o
  000169ea-00016a49  armBitRevIndexTable32              96   2  Cnst  RO  CommonTables.o
  00016a4a-00016ab9  armBitRevIndexTable64             112   2  Cnst  RO  CommonTables.o
  00016aba-00016c59  armBitRevIndexTable128            416   2  Cnst  RO  CommonTables.o
  00016c5a-00016fc9  armBitRevIndexTable256            880   2  Cnst  RO  CommonTables.o
  00016fca-00017349  armBitRevIndexTable512            896   2  Cnst  RO  CommonTables.o
  0001734a-00018159  armBitRevIndexTable1024         3 600   2  Cnst  RO  CommonTables.o
  0001815a-00019f19  armBitRevIndexTable2048         7 616   2  Cnst  RO  CommonTables.o
  00019f1a-0001be99  armBitRevIndexTable4096         8 064   2  Cnst  RO  CommonTables.o
  0001be9a-0001bf19  arm_cmplx_mag_f32                 128   2  Code  RX  ComplexMathFunctions.o
  0001bf1a-0001c20d  arm_cfft_radix8by2_f32            756   2  Code  RX  TransformFunctions.o
  0001c20e-0001cc39  arm_radix8_butterfly_f32        2 604   2  Code  RX  TransformFunctions.o
  0001cc3a-0001d409  arm_cfft_radix8by4_f32          2 000   2  Code  RX  TransformFunctions.o
  0001d40a-0001d575  arm_cfft_init_f32                 364   2  Code  RX  TransformFunctions.o
  0001d576-0001d5d1  arm_max_f32                        92   2  Code  RX  StatisticsFunctions.o
  0001d5d2-0001d5e1  reset_handler                      16   2  Code  RX  LPC1700_Startup.o
  0001d5e2-0001d5f5  __SEGGER_RTL_float64_isinf
                                                        20   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d5f6-0001d5f9  __SEGGER_RTL_float64_signbit
                                                         4   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d5fa-0001d619  frexp(float, int*)                 32   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d61a-0001d775  fmod(double, double)              348   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d776-0001d85d  sin(double)                       232   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d85e-0001d925  sqrt(float)                       200   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d926-0001d969  __SEGGER_RTL_float64_normalize
                                                        68   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d96a-0001d971  abs                                 8   2  Code  RX  intops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d972-0001d9d5  __SEGGER_RTL_pow10                100   2  Code  RX  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  0001d9d6-0001d9e1  __SEGGER_RTL_stdout_write          12   2  Code  RX  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0001d9e2-0001da3d  SEGGER_RTT_WriteNoLock             92   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001da3e-0001da51  _GetAvailWriteSpace                20   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001da52-0001da91  _WriteNoCheck                      64   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001da92-0001dae9  _WriteBlocking                     88   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001daea-0001db1d  SEGGER_RTT_Write                   52   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001db1e-0001db35  __SEGGER_RTL_prin_flush            24   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0001db36-0001dbb9  __SEGGER_RTL_putc                 132   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0001dbba-0001dbc1  __SEGGER_RTL_init_prin              8   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0001dbc2-0001e280  glyph_bitmap                    1 727   1  Cnst  RO  LCD.o
  0001e281-0001e287  [.rodata..L.str.3]                  7   1  Cnst  RO  LCD.o
  0001e288-0001e28a  [.rodata..L.str]                    3   1  Cnst  RO  Interrupts.o
  0001e28b-0001e28d  [.rodata..L.str.1]                  3   1  Cnst  RO  Interrupts.o
  0001e28e-0001e290  [.rodata..L.str.2]                  3   1  Cnst  RO  Interrupts.o
  0001e291-0001e293  [.rodata..L.str.3]                  3   1  Cnst  RO  Interrupts.o
  0001e294-0001e2a2  [.rodata..L.str.4]                 15   1  Cnst  RO  Interrupts.o
  0001e2a3-0001e2b1  [.rodata..L.str.2]                 15   1  Cnst  RO  Physics.o
  0001e2b2-0001e2b8  [.rodata.libc..L.str.2]             7   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001e2b9-0001e2bf  [.rodata.libc..L.str]               7   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e2c0-0001e2c9  [.rodata..L.str]                   10   1  Cnst  RO  LCD.o
  0001e2ca-0001e2d3  [.rodata..L.str.4]                 10   1  Cnst  RO  LCD.o
  0001e2d4-0001e2dd  [.rodata..L.str.5]                 10   1  Cnst  RO  LCD.o
  0001e2de-0001e2ff  [.rodata..L.str]                   34   1  Cnst  RO  Physics.o
  0001e300-0001e30c  [.rodata..L.str]                   13   1  Cnst  RO  main.o
  0001e30d-0001e339  [.rodata..L.str.1]                 45   1  Cnst  RO  Physics.o
  0001e33a-0001e33e  [.rodata..L.str.3]                  5   1  Cnst  RO  Physics.o
  0001e33f-0001e347  [.rodata.libc..L.str]               9   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001e348-0001e34c  [.rodata.libc..L.str.1]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e34d-0001e351  [.rodata.libc..L.str.2]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e352-0001e356  [.rodata.libc..L.str.3]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e357-0001e35b  [.rodata.libc..L.str.4]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e35c-0001e35f  [.init_array]                       4   4  ----  --  LPC1700_Startup.o
  0001e360-0001e373  [.rodata..L.str.1]                 20   1  Cnst  RO  main.o
  0001e374-0001e377  [.rodata..L.str.2]                  4   1  Cnst  RO  LCD.o
  0001e378-0001e4f7  __SEGGER_RTL_aSqrtData            384   1  Cnst  RO  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0001e4f8-0001e4fb  [.rodata.libc..L.str.1]             4   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0001e4fc-0001e4ff  [.rodata.libc..L.str.5]             4   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e500-0001e503  [.rodata.libc..L.str.6]             4   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e504-0001e513  __SEGGER_RTL_hex_uc                16   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e514-0001e523  __SEGGER_RTL_hex_lc                16   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0001e524-0001e543  __SEGGER_init_ctors                32   4  Code  RX  SEGGER_crtinit_v7m_little.o
  0001e544-0001e567  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  0001e568-0001e587  __SEGGER_init_data__               32   4  Cnst  RO  [ Linker created ]
  0001e588-0001e599  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit_v7m_little.o
  0001e59a-0001e5ad  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit_v7m_little.o
  0001e5ae-0fffffff  ( UNUSED .=.+268311122 )   268 311 122
                                                             -  ----  -   -
  10000000-10001fff  fft_buffer                      8 192   4  Zero  ZI  Microphone.o
  10002000-10002fff  fft_bin_output                  4 096   4  Zero  ZI  FFT.o
  10003000-10003aef  I2SRXBuffer                     2 800   4  Zero  ZI  Microphone.o
  10003af0-10003c07  body                              280   4  Zero  ZI  Physics.o
  10003c08-10003c7f  _SEGGER_RTT                       120   4  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  10003c80-10003c9f  sensor_data                        32   4  Zero  ZI  main.o
  10003ca0-10003cbf  local_time                         32   4  Zero  ZI  main.o
  10003cc0-10003ccf  varInstCfftF32                     16   4  Zero  ZI  FFT.o
  10003cd0-10003cdb  I2C_WriteLength                    12   4  Zero  ZI  I2C.o
  10003cdc-10003ce7  I2C_Timeout                        12   4  Zero  ZI  I2C.o
  10003ce8-10003cf3  I2C_ReadLength                     12   4  Zero  ZI  I2C.o
  10003cf4-10003cff  I2C_MasterState                    12   4  Zero  ZI  I2C.o
  10003d00-10003d03  testIndex                           4   4  Zero  ZI  FFT.o
  10003d04-10003d07  readings_skipped                    4   4  Zero  ZI  Microphone.o
  10003d08-10003d0b  maxValue                            4   4  Zero  ZI  FFT.o
  10003d0c-10003d0f  interrupt0RxTimeoutStat             4   4  Zero  ZI  SPI.o
  10003d10-10003d13  interrupt0RxStat                    4   4  Zero  ZI  SPI.o
  10003d14-10003d17  interrupt0OverRunStat               4   4  Zero  ZI  SPI.o
  10003d18-10003d1b  ifftFlag                            4   4  Zero  ZI  FFT.o
  10003d1c-10003d1f  eint0_counter                       4   4  Zero  ZI  Interrupts.o
  10003d20-10003d23  alarm_on                            4   4  Zero  ZI  RTC.o
  10003d24-10003d27  WrIndex1                            4   4  Zero  ZI  I2C.o
  10003d28-10003d2b  WrIndex0                            4   4  Zero  ZI  I2C.o
  10003d2c-10003d2f  RdIndex1                            4   4  Zero  ZI  I2C.o
  10003d30-10003d33  RdIndex0                            4   4  Zero  ZI  I2C.o
  10003d34-10003d37  I2SReadLength                       4   4  Zero  ZI  Microphone.o
  10003d38-10003d3b  Continue                            4   4  Zero  ZI  main.o
  10003d3c-10004d3b  fft_bin_output_old              4 096   2  Zero  ZI  LCD.o
  10004d3c-10005d3b  audio_signal_output_old         4 096   2  Zero  ZI  LCD.o
  10005d3c-10005d3d  z_accel                             2   2  Zero  ZI  Cube.o
  10005d3e-10005d3f  y_accel                             2   2  Zero  ZI  Cube.o
  10005d40-10005d41  x_accel                             2   2  Zero  ZI  Cube.o
  10005d42-10006141  _acUpBuffer                     1 024   1  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  10006142-10006201  I2C_SlaveBuffer                   192   1  Zero  ZI  I2C.o
  10006202-100062c1  I2C_MasterBuffer                  192   1  Zero  ZI  I2C.o
  100062c2-100062d1  _acDownBuffer                      16   1  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  100062d2-100062d2  fft_scale_flag                      1   1  Zero  ZI  LCD.o
  100062d3-100062d3  fft_ready                           1   1  Zero  ZI  FFT.o
  100062d4-100062d4  cube_data_updated_flag              1   1  Zero  ZI  Cube.o
  100062d5-100062d5  bodies_idx                          1   1  Zero  ZI  Physics.o
  100062d6-100062d6  I2SRXDone                           1   1  Zero  ZI  Microphone.o
  100062d7-100062d7  ( UNUSED .=.+1 )                    1   -  ----  -   -
  100062d8-100062db  refIndex                            4   4  Init  RW  FFT.o
  100062dc-100062df  lcd_arr                             4   4  Init  RW  LCD.o
  100062e0-100062e3  fftSize                             4   4  Init  RW  FFT.o
  100062e4-100062e7  doBitReverse                        4   4  Init  RW  FFT.o
  100062e8-100062eb  USBClock                            4   4  Init  RW  system_LPC177x_8x.o
  100062ec-100062ef  SystemCoreClock                     4   4  Init  RW  system_LPC177x_8x.o
  100062f0-100062f3  PeripheralClock                     4   4  Init  RW  system_LPC177x_8x.o
  100062f4-100062f7  EMCClock                            4   4  Init  RW  system_LPC177x_8x.o
  100062f8-200077ff  ( UNUSED .=.+268440840 )   268 440 840
                                                             -  ----  -   -
  20007800-20007fff  [.bss.block.stack]              2 048   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC_IRQHandler             0x00014AFD                  2  Code  Wk  LPC177x_8x_Vectors.o
  BOD_IRQHandler             0x00014AFF                  2  Code  Wk  LPC177x_8x_Vectors.o
  CANActivity_IRQHandler     0x00014B13                  2  Code  Wk  LPC177x_8x_Vectors.o
  CAN_IRQHandler             0x00014B03                  2  Code  Wk  LPC177x_8x_Vectors.o
  DMA_IRQHandler             0x00014B05                  2  Code  Wk  LPC177x_8x_Vectors.o
  EEPROM_IRQHandler          0x00014B1B                  2  Code  Wk  LPC177x_8x_Vectors.o
  EINT0_IRQHandler           0x00014385          66      2  Code  Gb  Interrupts.o
  EINT1_IRQHandler           0x00014AF9                  2  Code  Wk  LPC177x_8x_Vectors.o
  EINT2_IRQHandler           0x000143C7          66      2  Code  Gb  Interrupts.o
  EINT3_IRQHandler           0x00014AFB                  2  Code  Wk  LPC177x_8x_Vectors.o
  ENET_IRQHandler            0x00014B07                  2  Code  Wk  LPC177x_8x_Vectors.o
  GPIO_IRQHandler            0x000165FB         100      2  Code  Gb  Interrupts.o
  HardFault_Handler          0x00013D1D          46      2  Code  Gb  main.o
  I2C0_IRQHandler            0x00000271         868      4  Code  Gb  I2C.o
  I2C1_IRQHandler            0x000005D5         892      4  Code  Gb  I2C.o
  I2C1_Init                  0x000154B7         100      2  Code  Gb  I2C.o
  I2C2_IRQHandler            0x00014AF1                  2  Code  Wk  LPC177x_8x_Vectors.o
  I2S_Config                 0x00015547          76      2  Code  Gb  Microphone.o
  I2S_DeInit                 0x000135C3          18      2  Code  Gb  Microphone.o
  I2S_IRQCmd                 0x000155E7         108      2  Code  Gb  Microphone.o
  I2S_IRQConfig              0x00015593          84      2  Code  Gb  Microphone.o
  I2S_IRQHandler             0x000134D1         242      2  Code  Gb  Microphone.o
  I2S_Init                   0x00013449          66      2  Code  Gb  Microphone.o
  I2S_Start                  0x0001348B          70      2  Code  Gb  Microphone.o
  I2S_Stop                   0x00015653          48      2  Code  Gb  Microphone.o
  InitLCDPorts               0x00014109         442      2  Code  Gb  LCD.o
  LCD_IRQHandler             0x0001445B         110      2  Code  Gb  Interrupts.o
  MCI_IRQHandler             0x00014B09                  2  Code  Wk  LPC177x_8x_Vectors.o
  MCPWM_IRQHandler           0x00014B0B                  2  Code  Wk  LPC177x_8x_Vectors.o
  NMI_Handler                0x000000E5                  2  Code  Wk  LPC177x_8x_Vectors.o
  PLL0_IRQHandler            0x00014AF7                  2  Code  Wk  LPC177x_8x_Vectors.o
  PLL1_IRQHandler            0x00014B0F                  2  Code  Wk  LPC177x_8x_Vectors.o
  PWM0_IRQHandler            0x00014B19                  2  Code  Wk  LPC177x_8x_Vectors.o
  PWM1_IRQHandler            0x00014AEF                  2  Code  Wk  LPC177x_8x_Vectors.o
  PendSV_Handler             0x00014ADB                  2  Code  Wk  LPC177x_8x_Vectors.o
  QEI_IRQHandler             0x00014B0D                  2  Code  Wk  LPC177x_8x_Vectors.o
  RTCGetTime                 0x000158A7         100      2  Code  Gb  RTC.o
  RTCSetTime                 0x000157F7         136      2  Code  Gb  RTC.o
  RTCStart                   0x0001587F          40      2  Code  Gb  RTC.o
  RTC_IRQHandler             0x00014417          38      2  Code  Gb  Interrupts.o
  RTC_Init                   0x00013719         206      2  Code  Gb  RTC.o
  Reset_Handler              0x0001D5D3                  2  Code  Gb  LPC1700_Startup.o
  SEGGER_RTT_Write           0x0001DAEB          52      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  SEGGER_RTT_WriteNoLock     0x0001D9E3          92      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  SPIFI_IRQHandler           0x00014AF3                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSP0_IRQHandler            0x000156A3         112      2  Code  Gb  SPI.o
  SSP0_Init                  0x000135D5         186      2  Code  Gb  SPI.o
  SSP1_IRQHandler            0x00014AF5                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSP2_IRQHandler            0x00014B17                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSPReceive                 0x0001368F         138      2  Code  Gb  SPI.o
  SSPSend                    0x0001573F         184      2  Code  Gb  SPI.o
  SVC_Handler                0x000000E7                  2  Code  Wk  LPC177x_8x_Vectors.o
  SysTick_Handler            0x00014ADD                  2  Code  Wk  LPC177x_8x_Vectors.o
  SystemClockUpdate          0x00013CDF          62      2  Code  Gb  main.o
  SystemCoreClockUpdate      0x0001286F       1 274      2  Code  Gb  system_LPC177x_8x.o
  SystemInit                 0x00012D69         298      2  Code  Gb  system_LPC177x_8x.o
  SystemInit_ExtMemCtl       0x00012E93         674      2  Code  Lc  system_LPC177x_8x.o
  TIMER0_IRQHandler          0x0001657B          32      2  Code  Gb  Interrupts.o
  TIMER1_IRQHandler          0x00014AE1                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER2_IRQHandler          0x00014AE3                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER3_IRQHandler          0x00014AE5                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART0_IRQHandler           0x00014AE7                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART1_IRQHandler           0x00014AE9                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART2_IRQHandler           0x00014AEB                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART3_IRQHandler           0x00014AED                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART4_IRQHandler           0x00014B15                  2  Code  Wk  LPC177x_8x_Vectors.o
  USBActivity_IRQHandler     0x00014B11                  2  Code  Wk  LPC177x_8x_Vectors.o
  USB_IRQHandler             0x00014B01                  2  Code  Wk  LPC177x_8x_Vectors.o
  WDT_IRQHandler             0x00014ADF                  2  Code  Wk  LPC177x_8x_Vectors.o
  _DoInit                    0x000152B7         106      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _GetAvailWriteSpace        0x0001DA3F          20      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _WriteBlocking             0x0001DA93          88      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _WriteNoCheck              0x0001DA53          64      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  __NVIC_DisableIRQ          0x0001659B          52      2  Code  Lc  Interrupts.o
  __NVIC_EnableIRQ           0x0001548B          44      2  Code  Lc  I2C.o
  __NVIC_EnableIRQ           0x0001551B          44      2  Code  Lc  Microphone.o
  __NVIC_EnableIRQ           0x00015713          44      2  Code  Lc  SPI.o
  __NVIC_EnableIRQ           0x000165CF          44      2  Code  Lc  Interrupts.o
  __SEGGER_RTL_float64_PolyEvalP
                             0x000151AF          78      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_PolyEvalQ
                             0x000151FD          78      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_isinf
                             0x0001D5E3          20      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_isnan
                             0x00014B1D          14      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_normalize
                             0x0001D927          68      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_signbit
                             0x0001D5F7           4      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_init_prin     0x0001DBBB           8      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_pow10         0x0001D973         100      2  Code  Gb  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_pre_padding   0x0001533F          18      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush    0x0001DB1F          24      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_print_padding
                             0x00015321          30      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc          0x0001DB37         132      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_write  0x0001D9D7          12      2  Code  Lc  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf      0x00011AF5       3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_short_float_long
                             0x00011AF5       3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x0001E59B          20      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  __SEGGER_init_ctors        0x0001E525          24      4  Code  Wk  SEGGER_crtinit_v7m_little.o
  __SEGGER_init_done         0x00010C6B                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x0001E589          18      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  __aeabi_d2f                0x0001179D          76      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_d2iz               0x00011601          74      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_d2ulz              0x0001164D          62      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dadd               0x00010D85         574      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpeq             0x00011459          50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpge             0x000114C1          60      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpgt             0x0001152D          56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmplt             0x00011595          56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_ddiv               0x00011295         450      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dmul               0x00011099         304      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dsub               0x00010FCD           8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_f2d                0x00011769          52      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_f2iz               0x000115CD          52      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_fadd               0x00010C75         272      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_fcmpge             0x0001148D          50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_fcmpgt             0x000114FD          46      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_fcmplt             0x00011565          46      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_fdiv               0x000111C9         202      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_fmul               0x00010FD5         196      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_fsub               0x00010FC5           8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_i2d                0x000116BD          38      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_i2f                0x0001168D          48      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr             0x00011A89         106      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr4            0x00011A89                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr8            0x00011A89                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x00011A3D                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x00011A49                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x00011A49                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset             0x00011A8B                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset4            0x00011A8B                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset8            0x00011A8B                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_ui2f               0x000116E5          40      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_ul2d               0x0001170D          90      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_uldivmod           0x000118E9         206      4  Code  Wk  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  _start                     0x00010C61          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  abs                        0x0001D96B           8      2  Code  Wk  intops.o (libc_v7m_t_le_eabi_balanced.a)
  acc_calculate_xyz_angles   0x000153CF         188      2  Code  Gb  Accelerometer.o
  acc_read                   0x00013135         126      2  Code  Gb  Accelerometer.o
  acc_read_xyz               0x0001538B          68      2  Code  Gb  Accelerometer.o
  arm_bitreversal_32         0x00014859         138      2  Code  Gb  TransformFunctions.o
  arm_cfft_f32               0x000148E3         294      2  Code  Gb  TransformFunctions.o
  arm_cfft_init_f32          0x0001D40B         364      2  Code  Gb  TransformFunctions.o
  arm_cfft_radix8by2_f32     0x0001BF1B         756      2  Code  Gb  TransformFunctions.o
  arm_cfft_radix8by4_f32     0x0001CC3B       2 000      2  Code  Gb  TransformFunctions.o
  arm_cmplx_mag_f32          0x0001BE9B         128      2  Code  Gb  ComplexMathFunctions.o
  arm_max_f32                0x0001D577          92      2  Code  Gb  StatisticsFunctions.o
  arm_radix8_butterfly_f32   0x0001C20F       2 604      2  Code  Gb  TransformFunctions.o
  atan                       0x00014D91         378      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  atan(double)               0x00014D91         378      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  atan2                      0x00014F0B         398      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  atan2(double, double)      0x00014F0B         398      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  cos                        0x00014C93         254      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  cos(double)                0x00014C93         254      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  delay                      0x00013CB7          18      2  Code  Gb  main.o
  delay_long                 0x000159AB          32      2  Code  Gb  main.o
  delay_ms                   0x00013CC9          22      2  Code  Gb  main.o
  delay_short                0x000159CB          32      2  Code  Gb  main.o
  enable_10v_boost           0x00013C0B          46      2  Code  Gb  Power.o
  esp32_get_accel_data       0x0001594B          96      2  Code  Gb  ESP32.o
  esp32_init                 0x0001590B          64      2  Code  Gb  ESP32.o
  esp32_read                 0x00013C39         126      2  Code  Gb  ESP32.o
  exit                       0x00010C6F           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  fft_test                   0x00014A09         210      2  Code  Gb  FFT.o
  floor                      0x00014BB5         222      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  floor(double)              0x00014BB5         222      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  fmod                       0x0001D61B         348      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  fmod(double, double)       0x0001D61B         348      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexp                      0x00014B8F          38      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexp(double, int*)        0x00014B8F          38      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexp(float, int*)         0x0001D5FB          32      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexpf                     0x0001D5FB          32      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  lcd_clear_audio_signal     0x0001643F         156      2  Code  Gb  LCD.o
  lcd_clear_fft_graph        0x0001611B         156      2  Code  Gb  LCD.o
  lcd_config                 0x00015D47         368      2  Code  Gb  LCD.o
  lcd_draw_audio_graph       0x000142C3         194      2  Code  Gb  LCD.o
  lcd_draw_audio_signal      0x000161B7         648      2  Code  Gb  LCD.o
  lcd_draw_circle            0x00014033         214      2  Code  Gb  LCD.o
  lcd_draw_fft_bins          0x00015F9F         380      2  Code  Gb  LCD.o
  lcd_draw_fft_graph         0x00015EB7         232      2  Code  Gb  LCD.o
  lcd_draw_line              0x00013E95         414      2  Code  Gb  LCD.o
  lcd_draw_pixel             0x00015BEF          48      2  Code  Gb  LCD.o
  lcd_draw_rectangle         0x00015C1F         272      2  Code  Gb  LCD.o
  lcd_draw_text              0x000159EB         516      2  Code  Gb  LCD.o
  lcd_draw_time              0x00013DA5         122      2  Code  Gb  LCD.o
  lcd_fft_draw_buttons       0x000164DB         160      2  Code  Gb  LCD.o
  lcd_init                   0x00015D2F          24      2  Code  Gb  LCD.o
  lcd_test                   0x00013E1F         118      2  Code  Gb  LCD.o
  lcd_touch_interrupt_enable
                             0x000144C9          58      2  Code  Gb  Interrupts.o
  lcd_vfp_interrupt_enable   0x00014503          46      2  Code  Gb  Interrupts.o
  ldexp                      0x00014B55          58      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  ldexp(double, int)         0x00014B55          58      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  ldexp(float, int)          0x00014B2B          42      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  ldexpf                     0x00014B2B          42      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  led_flash                  0x00013255          58      2  Code  Gb  LEDs.o
  led_green_off              0x00013243          18      2  Code  Gb  LEDs.o
  led_green_on               0x00013231          18      2  Code  Gb  LEDs.o
  led_init                   0x000131B3         126      2  Code  Gb  LEDs.o
  led_status                 0x000127F1         126      4  Code  Gb  LEDs.o
  main                       0x00013D4B          90      2  Code  Gb  main.o
  memcpy                     0x00011A3D          76      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  memset                     0x00011A91                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  mic_init                   0x0001328F          54      2  Code  Gb  Microphone.o
  mic_pwr_on                 0x000132C5          98      2  Code  Gb  Microphone.o
  mic_start_fft              0x00015683          32      2  Code  Gb  Microphone.o
  mic_take_measurements      0x00013327         290      2  Code  Gb  Microphone.o
  physics_calculate_direction_collision
                             0x0001456F         746      2  Code  Gb  Physics.o
  physics_calculate_position
                             0x000166FF         424      2  Code  Gb  Physics.o
  physics_detect_body_collision
                             0x000168A7         152      2  Code  Gb  Physics.o
  physics_distance           0x00014531          62      2  Code  Gb  Physics.o
  physics_draw_bodies        0x0001665F          80      2  Code  Gb  Physics.o
  physics_erase_bodies       0x000166AF          80      2  Code  Gb  Physics.o
  physics_interrupt_operations
                             0x000169A3          32      2  Code  Gb  Physics.o
  physics_new_to_old         0x0001693F         100      2  Code  Gb  Physics.o
  printf                     0x00015271          70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  printf_rtt                 0x00015271          70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  ram_init                   0x000137E7         990      2  Code  Gb  RAM.o
  ram_write_init             0x00013BC5          70      2  Code  Gb  RAM.o
  reset_handler              0x0001D5D3                  2  Code  Gb  LPC1700_Startup.o
  rtc_interrupt_enable       0x0001443D          30      2  Code  Gb  Interrupts.o
  sin                        0x0001D777         232      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  sin(double)                0x0001D777         232      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  sprintf                    0x00015351          58      2  Code  Wk  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  sqrt                       0x00015099         278      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  sqrt(double)               0x00015099         278      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  sqrt(float)                0x0001D85F         200      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  sqrtf                      0x0001D85F         200      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  strcpy                     0x000119B9          56      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  strlen                     0x000119F1          74      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  strnlen                    0x0001524B          38      2  Code  Wk  strops.o (libc_v7m_t_le_eabi_balanced.a)
  timer0_interrupt_enable    0x00014409          14      2  Code  Gb  Interrupts.o

Function symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x000000E5  NMI_Handler                                2  Code  Wk  LPC177x_8x_Vectors.o
  0x000000E7  SVC_Handler                                2  Code  Wk  LPC177x_8x_Vectors.o
  0x00000271  I2C0_IRQHandler                   868      4  Code  Gb  I2C.o
  0x000005D5  I2C1_IRQHandler                   892      4  Code  Gb  I2C.o
  0x00010C61  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x00010C6B  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x00010C6F  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x00010C75  __aeabi_fadd                      272      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00010D85  __aeabi_dadd                      574      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00010FC5  __aeabi_fsub                        8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00010FCD  __aeabi_dsub                        8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00010FD5  __aeabi_fmul                      196      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011099  __aeabi_dmul                      304      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000111C9  __aeabi_fdiv                      202      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011295  __aeabi_ddiv                      450      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011459  __aeabi_dcmpeq                     50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001148D  __aeabi_fcmpge                     50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000114C1  __aeabi_dcmpge                     60      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000114FD  __aeabi_fcmpgt                     46      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001152D  __aeabi_dcmpgt                     56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011565  __aeabi_fcmplt                     46      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011595  __aeabi_dcmplt                     56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000115CD  __aeabi_f2iz                       52      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011601  __aeabi_d2iz                       74      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001164D  __aeabi_d2ulz                      62      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001168D  __aeabi_i2f                        48      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000116BD  __aeabi_i2d                        38      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000116E5  __aeabi_ui2f                       40      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001170D  __aeabi_ul2d                       90      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011769  __aeabi_f2d                        52      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001179D  __aeabi_d2f                        76      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000118E9  __aeabi_uldivmod                  206      4  Code  Wk  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000119B9  strcpy                             56      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000119F1  strlen                             74      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A3D  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A3D  memcpy                             76      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A49  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A49  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A89  __aeabi_memclr                    106      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A89  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A89  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A8B  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A8B  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A8B  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011A91  memset                                     4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011AF5  __SEGGER_RTL_vfprintf           3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x00011AF5  __SEGGER_RTL_vfprintf_short_float_long
                                              3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x000127F1  led_status                        126      4  Code  Gb  LEDs.o
  0x0001286F  SystemCoreClockUpdate           1 274      2  Code  Gb  system_LPC177x_8x.o
  0x00012D69  SystemInit                        298      2  Code  Gb  system_LPC177x_8x.o
  0x00012E93  SystemInit_ExtMemCtl              674      2  Code  Lc  system_LPC177x_8x.o
  0x00013135  acc_read                          126      2  Code  Gb  Accelerometer.o
  0x000131B3  led_init                          126      2  Code  Gb  LEDs.o
  0x00013231  led_green_on                       18      2  Code  Gb  LEDs.o
  0x00013243  led_green_off                      18      2  Code  Gb  LEDs.o
  0x00013255  led_flash                          58      2  Code  Gb  LEDs.o
  0x0001328F  mic_init                           54      2  Code  Gb  Microphone.o
  0x000132C5  mic_pwr_on                         98      2  Code  Gb  Microphone.o
  0x00013327  mic_take_measurements             290      2  Code  Gb  Microphone.o
  0x00013449  I2S_Init                           66      2  Code  Gb  Microphone.o
  0x0001348B  I2S_Start                          70      2  Code  Gb  Microphone.o
  0x000134D1  I2S_IRQHandler                    242      2  Code  Gb  Microphone.o
  0x000135C3  I2S_DeInit                         18      2  Code  Gb  Microphone.o
  0x000135D5  SSP0_Init                         186      2  Code  Gb  SPI.o
  0x0001368F  SSPReceive                        138      2  Code  Gb  SPI.o
  0x00013719  RTC_Init                          206      2  Code  Gb  RTC.o
  0x000137E7  ram_init                          990      2  Code  Gb  RAM.o
  0x00013BC5  ram_write_init                     70      2  Code  Gb  RAM.o
  0x00013C0B  enable_10v_boost                   46      2  Code  Gb  Power.o
  0x00013C39  esp32_read                        126      2  Code  Gb  ESP32.o
  0x00013CB7  delay                              18      2  Code  Gb  main.o
  0x00013CC9  delay_ms                           22      2  Code  Gb  main.o
  0x00013CDF  SystemClockUpdate                  62      2  Code  Gb  main.o
  0x00013D1D  HardFault_Handler                  46      2  Code  Gb  main.o
  0x00013D4B  main                               90      2  Code  Gb  main.o
  0x00013DA5  lcd_draw_time                     122      2  Code  Gb  LCD.o
  0x00013E1F  lcd_test                          118      2  Code  Gb  LCD.o
  0x00013E95  lcd_draw_line                     414      2  Code  Gb  LCD.o
  0x00014033  lcd_draw_circle                   214      2  Code  Gb  LCD.o
  0x00014109  InitLCDPorts                      442      2  Code  Gb  LCD.o
  0x000142C3  lcd_draw_audio_graph              194      2  Code  Gb  LCD.o
  0x00014385  EINT0_IRQHandler                   66      2  Code  Gb  Interrupts.o
  0x000143C7  EINT2_IRQHandler                   66      2  Code  Gb  Interrupts.o
  0x00014409  timer0_interrupt_enable            14      2  Code  Gb  Interrupts.o
  0x00014417  RTC_IRQHandler                     38      2  Code  Gb  Interrupts.o
  0x0001443D  rtc_interrupt_enable               30      2  Code  Gb  Interrupts.o
  0x0001445B  LCD_IRQHandler                    110      2  Code  Gb  Interrupts.o
  0x000144C9  lcd_touch_interrupt_enable
                                                 58      2  Code  Gb  Interrupts.o
  0x00014503  lcd_vfp_interrupt_enable           46      2  Code  Gb  Interrupts.o
  0x00014531  physics_distance                   62      2  Code  Gb  Physics.o
  0x0001456F  physics_calculate_direction_collision
                                                746      2  Code  Gb  Physics.o
  0x00014859  arm_bitreversal_32                138      2  Code  Gb  TransformFunctions.o
  0x000148E3  arm_cfft_f32                      294      2  Code  Gb  TransformFunctions.o
  0x00014A09  fft_test                          210      2  Code  Gb  FFT.o
  0x00014ADB  PendSV_Handler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014ADD  SysTick_Handler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014ADF  WDT_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AE1  TIMER1_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AE3  TIMER2_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AE5  TIMER3_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AE7  UART0_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AE9  UART1_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AEB  UART2_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AED  UART3_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AEF  PWM1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AF1  I2C2_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AF3  SPIFI_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AF5  SSP1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AF7  PLL0_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AF9  EINT1_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AFB  EINT3_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AFD  ADC_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014AFF  BOD_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B01  USB_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B03  CAN_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B05  DMA_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B07  ENET_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B09  MCI_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B0B  MCPWM_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B0D  QEI_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B0F  PLL1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B11  USBActivity_IRQHandler                     2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B13  CANActivity_IRQHandler                     2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B15  UART4_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B17  SSP2_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B19  PWM0_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B1B  EEPROM_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x00014B1D  __SEGGER_RTL_float64_isnan
                                                 14      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014B2B  ldexp(float, int)                  42      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014B2B  ldexpf                             42      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014B55  ldexp                              58      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014B55  ldexp(double, int)                 58      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014B8F  frexp                              38      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014B8F  frexp(double, int*)                38      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014BB5  floor                             222      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014BB5  floor(double)                     222      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014C93  cos                               254      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014C93  cos(double)                       254      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014D91  atan                              378      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014D91  atan(double)                      378      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014F0B  atan2                             398      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00014F0B  atan2(double, double)             398      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00015099  sqrt                              278      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00015099  sqrt(double)                      278      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000151AF  __SEGGER_RTL_float64_PolyEvalP
                                                 78      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000151FD  __SEGGER_RTL_float64_PolyEvalQ
                                                 78      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001524B  strnlen                            38      2  Code  Wk  strops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00015271  printf                             70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x00015271  printf_rtt                         70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x000152B7  _DoInit                           106      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00015321  __SEGGER_RTL_print_padding
                                                 30      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001533F  __SEGGER_RTL_pre_padding           18      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00015351  sprintf                            58      2  Code  Wk  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001538B  acc_read_xyz                       68      2  Code  Gb  Accelerometer.o
  0x000153CF  acc_calculate_xyz_angles          188      2  Code  Gb  Accelerometer.o
  0x0001548B  __NVIC_EnableIRQ                   44      2  Code  Lc  I2C.o
  0x000154B7  I2C1_Init                         100      2  Code  Gb  I2C.o
  0x0001551B  __NVIC_EnableIRQ                   44      2  Code  Lc  Microphone.o
  0x00015547  I2S_Config                         76      2  Code  Gb  Microphone.o
  0x00015593  I2S_IRQConfig                      84      2  Code  Gb  Microphone.o
  0x000155E7  I2S_IRQCmd                        108      2  Code  Gb  Microphone.o
  0x00015653  I2S_Stop                           48      2  Code  Gb  Microphone.o
  0x00015683  mic_start_fft                      32      2  Code  Gb  Microphone.o
  0x000156A3  SSP0_IRQHandler                   112      2  Code  Gb  SPI.o
  0x00015713  __NVIC_EnableIRQ                   44      2  Code  Lc  SPI.o
  0x0001573F  SSPSend                           184      2  Code  Gb  SPI.o
  0x000157F7  RTCSetTime                        136      2  Code  Gb  RTC.o
  0x0001587F  RTCStart                           40      2  Code  Gb  RTC.o
  0x000158A7  RTCGetTime                        100      2  Code  Gb  RTC.o
  0x0001590B  esp32_init                         64      2  Code  Gb  ESP32.o
  0x0001594B  esp32_get_accel_data               96      2  Code  Gb  ESP32.o
  0x000159AB  delay_long                         32      2  Code  Gb  main.o
  0x000159CB  delay_short                        32      2  Code  Gb  main.o
  0x000159EB  lcd_draw_text                     516      2  Code  Gb  LCD.o
  0x00015BEF  lcd_draw_pixel                     48      2  Code  Gb  LCD.o
  0x00015C1F  lcd_draw_rectangle                272      2  Code  Gb  LCD.o
  0x00015D2F  lcd_init                           24      2  Code  Gb  LCD.o
  0x00015D47  lcd_config                        368      2  Code  Gb  LCD.o
  0x00015EB7  lcd_draw_fft_graph                232      2  Code  Gb  LCD.o
  0x00015F9F  lcd_draw_fft_bins                 380      2  Code  Gb  LCD.o
  0x0001611B  lcd_clear_fft_graph               156      2  Code  Gb  LCD.o
  0x000161B7  lcd_draw_audio_signal             648      2  Code  Gb  LCD.o
  0x0001643F  lcd_clear_audio_signal            156      2  Code  Gb  LCD.o
  0x000164DB  lcd_fft_draw_buttons              160      2  Code  Gb  LCD.o
  0x0001657B  TIMER0_IRQHandler                  32      2  Code  Gb  Interrupts.o
  0x0001659B  __NVIC_DisableIRQ                  52      2  Code  Lc  Interrupts.o
  0x000165CF  __NVIC_EnableIRQ                   44      2  Code  Lc  Interrupts.o
  0x000165FB  GPIO_IRQHandler                   100      2  Code  Gb  Interrupts.o
  0x0001665F  physics_draw_bodies                80      2  Code  Gb  Physics.o
  0x000166AF  physics_erase_bodies               80      2  Code  Gb  Physics.o
  0x000166FF  physics_calculate_position
                                                424      2  Code  Gb  Physics.o
  0x000168A7  physics_detect_body_collision
                                                152      2  Code  Gb  Physics.o
  0x0001693F  physics_new_to_old                100      2  Code  Gb  Physics.o
  0x000169A3  physics_interrupt_operations
                                                 32      2  Code  Gb  Physics.o
  0x0001BE9B  arm_cmplx_mag_f32                 128      2  Code  Gb  ComplexMathFunctions.o
  0x0001BF1B  arm_cfft_radix8by2_f32            756      2  Code  Gb  TransformFunctions.o
  0x0001C20F  arm_radix8_butterfly_f32        2 604      2  Code  Gb  TransformFunctions.o
  0x0001CC3B  arm_cfft_radix8by4_f32          2 000      2  Code  Gb  TransformFunctions.o
  0x0001D40B  arm_cfft_init_f32                 364      2  Code  Gb  TransformFunctions.o
  0x0001D577  arm_max_f32                        92      2  Code  Gb  StatisticsFunctions.o
  0x0001D5D3  Reset_Handler                              2  Code  Gb  LPC1700_Startup.o
  0x0001D5D3  reset_handler                              2  Code  Gb  LPC1700_Startup.o
  0x0001D5E3  __SEGGER_RTL_float64_isinf
                                                 20      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D5F7  __SEGGER_RTL_float64_signbit
                                                  4      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D5FB  frexp(float, int*)                 32      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D5FB  frexpf                             32      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D61B  fmod                              348      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D61B  fmod(double, double)              348      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D777  sin                               232      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D777  sin(double)                       232      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D85F  sqrt(float)                       200      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D85F  sqrtf                             200      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D927  __SEGGER_RTL_float64_normalize
                                                 68      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D96B  abs                                 8      2  Code  Wk  intops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D973  __SEGGER_RTL_pow10                100      2  Code  Gb  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D9D7  __SEGGER_RTL_stdout_write          12      2  Code  Lc  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001D9E3  SEGGER_RTT_WriteNoLock             92      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001DA3F  _GetAvailWriteSpace                20      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001DA53  _WriteNoCheck                      64      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001DA93  _WriteBlocking                     88      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001DAEB  SEGGER_RTT_Write                   52      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001DB1F  __SEGGER_RTL_prin_flush            24      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001DB37  __SEGGER_RTL_putc                 132      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001DBBB  __SEGGER_RTL_init_prin              8      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001E525  __SEGGER_init_ctors                24      4  Code  Wk  SEGGER_crtinit_v7m_little.o
  0x0001E589  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  0x0001E59B  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit_v7m_little.o

Read-write data symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  Continue                   0x10003D38           4      4  Zero  Gb  main.o
  EMCClock                   0x100062F4           4      4  Init  Gb  system_LPC177x_8x.o
  I2C_MasterBuffer           0x10006202         192         Zero  Gb  I2C.o
  I2C_MasterState            0x10003CF4          12      4  Zero  Gb  I2C.o
  I2C_ReadLength             0x10003CE8          12      4  Zero  Gb  I2C.o
  I2C_SlaveBuffer            0x10006142         192         Zero  Gb  I2C.o
  I2C_Timeout                0x10003CDC          12      4  Zero  Gb  I2C.o
  I2C_WriteLength            0x10003CD0          12      4  Zero  Gb  I2C.o
  I2SRXBuffer                0x10003000       2 800      4  Zero  Gb  Microphone.o
  I2SRXDone                  0x100062D6           1         Zero  Gb  Microphone.o
  I2SReadLength              0x10003D34           4      4  Zero  Gb  Microphone.o
  PeripheralClock            0x100062F0           4      4  Init  Gb  system_LPC177x_8x.o
  RdIndex0                   0x10003D30           4      4  Zero  Gb  I2C.o
  RdIndex1                   0x10003D2C           4      4  Zero  Gb  I2C.o
  SystemCoreClock            0x100062EC           4      4  Init  Gb  system_LPC177x_8x.o
  USBClock                   0x100062E8           4      4  Init  Gb  system_LPC177x_8x.o
  WrIndex0                   0x10003D28           4      4  Zero  Gb  I2C.o
  WrIndex1                   0x10003D24           4      4  Zero  Gb  I2C.o
  _SEGGER_RTT                0x10003C08         120      4  Zero  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _acDownBuffer              0x100062C2          16         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _acUpBuffer                0x10005D42       1 024         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  alarm_on                   0x10003D20           4      4  Zero  Gb  RTC.o
  audio_signal_output_old    0x10004D3C       4 096      2  Zero  Gb  LCD.o
  bodies_idx                 0x100062D5           1         Zero  Gb  Physics.o
  body                       0x10003AF0         280      4  Zero  Gb  Physics.o
  cube_data_updated_flag     0x100062D4           1         Zero  Gb  Cube.o
  doBitReverse               0x100062E4           4      4  Init  Gb  FFT.o
  eint0_counter              0x10003D1C           4      4  Zero  Gb  Interrupts.o
  fftSize                    0x100062E0           4      4  Init  Gb  FFT.o
  fft_bin_output             0x10002000       4 096      4  Zero  Gb  FFT.o
  fft_bin_output_old         0x10003D3C       4 096      2  Zero  Gb  LCD.o
  fft_buffer                 0x10000000       8 192      4  Zero  Gb  Microphone.o
  fft_ready                  0x100062D3           1         Zero  Gb  FFT.o
  fft_scale_flag             0x100062D2           1         Zero  Gb  LCD.o
  ifftFlag                   0x10003D18           4      4  Zero  Gb  FFT.o
  interrupt0OverRunStat      0x10003D14           4      4  Zero  Gb  SPI.o
  interrupt0RxStat           0x10003D10           4      4  Zero  Gb  SPI.o
  interrupt0RxTimeoutStat    0x10003D0C           4      4  Zero  Gb  SPI.o
  lcd_arr                    0x100062DC           4      4  Init  Gb  LCD.o
  local_time                 0x10003CA0          32      4  Zero  Gb  main.o
  maxValue                   0x10003D08           4      4  Zero  Gb  FFT.o
  readings_skipped           0x10003D04           4      4  Zero  Gb  Microphone.o
  refIndex                   0x100062D8           4      4  Init  Gb  FFT.o
  sensor_data                0x10003C80          32      4  Zero  Gb  main.o
  testIndex                  0x10003D00           4      4  Zero  Gb  FFT.o
  varInstCfftF32             0x10003CC0          16      4  Zero  Gb  FFT.o
  x_accel                    0x10005D40           2      2  Zero  Gb  Cube.o
  y_accel                    0x10005D3E           2      2  Zero  Gb  Cube.o
  z_accel                    0x10005D3C           2      2  Zero  Gb  Cube.o

Read-write data symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x10000000  fft_buffer                      8 192      4  Zero  Gb  Microphone.o
  0x10002000  fft_bin_output                  4 096      4  Zero  Gb  FFT.o
  0x10003000  I2SRXBuffer                     2 800      4  Zero  Gb  Microphone.o
  0x10003AF0  body                              280      4  Zero  Gb  Physics.o
  0x10003C08  _SEGGER_RTT                       120      4  Zero  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x10003C80  sensor_data                        32      4  Zero  Gb  main.o
  0x10003CA0  local_time                         32      4  Zero  Gb  main.o
  0x10003CC0  varInstCfftF32                     16      4  Zero  Gb  FFT.o
  0x10003CD0  I2C_WriteLength                    12      4  Zero  Gb  I2C.o
  0x10003CDC  I2C_Timeout                        12      4  Zero  Gb  I2C.o
  0x10003CE8  I2C_ReadLength                     12      4  Zero  Gb  I2C.o
  0x10003CF4  I2C_MasterState                    12      4  Zero  Gb  I2C.o
  0x10003D00  testIndex                           4      4  Zero  Gb  FFT.o
  0x10003D04  readings_skipped                    4      4  Zero  Gb  Microphone.o
  0x10003D08  maxValue                            4      4  Zero  Gb  FFT.o
  0x10003D0C  interrupt0RxTimeoutStat             4      4  Zero  Gb  SPI.o
  0x10003D10  interrupt0RxStat                    4      4  Zero  Gb  SPI.o
  0x10003D14  interrupt0OverRunStat               4      4  Zero  Gb  SPI.o
  0x10003D18  ifftFlag                            4      4  Zero  Gb  FFT.o
  0x10003D1C  eint0_counter                       4      4  Zero  Gb  Interrupts.o
  0x10003D20  alarm_on                            4      4  Zero  Gb  RTC.o
  0x10003D24  WrIndex1                            4      4  Zero  Gb  I2C.o
  0x10003D28  WrIndex0                            4      4  Zero  Gb  I2C.o
  0x10003D2C  RdIndex1                            4      4  Zero  Gb  I2C.o
  0x10003D30  RdIndex0                            4      4  Zero  Gb  I2C.o
  0x10003D34  I2SReadLength                       4      4  Zero  Gb  Microphone.o
  0x10003D38  Continue                            4      4  Zero  Gb  main.o
  0x10003D3C  fft_bin_output_old              4 096      2  Zero  Gb  LCD.o
  0x10004D3C  audio_signal_output_old         4 096      2  Zero  Gb  LCD.o
  0x10005D3C  z_accel                             2      2  Zero  Gb  Cube.o
  0x10005D3E  y_accel                             2      2  Zero  Gb  Cube.o
  0x10005D40  x_accel                             2      2  Zero  Gb  Cube.o
  0x10005D42  _acUpBuffer                     1 024         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x10006142  I2C_SlaveBuffer                   192         Zero  Gb  I2C.o
  0x10006202  I2C_MasterBuffer                  192         Zero  Gb  I2C.o
  0x100062C2  _acDownBuffer                      16         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x100062D2  fft_scale_flag                      1         Zero  Gb  LCD.o
  0x100062D3  fft_ready                           1         Zero  Gb  FFT.o
  0x100062D4  cube_data_updated_flag              1         Zero  Gb  Cube.o
  0x100062D5  bodies_idx                          1         Zero  Gb  Physics.o
  0x100062D6  I2SRXDone                           1         Zero  Gb  Microphone.o
  0x100062D8  refIndex                            4      4  Init  Gb  FFT.o
  0x100062DC  lcd_arr                             4      4  Init  Gb  LCD.o
  0x100062E0  fftSize                             4      4  Init  Gb  FFT.o
  0x100062E4  doBitReverse                        4      4  Init  Gb  FFT.o
  0x100062E8  USBClock                            4      4  Init  Gb  system_LPC177x_8x.o
  0x100062EC  SystemCoreClock                     4      4  Init  Gb  system_LPC177x_8x.o
  0x100062F0  PeripheralClock                     4      4  Init  Gb  system_LPC177x_8x.o
  0x100062F4  EMCClock                            4      4  Init  Gb  system_LPC177x_8x.o

Read-only data symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __SEGGER_RTL_aPower2       0x00000188          72      8  Cnst  Lc  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_aSqrtData     0x0001E378         384         Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_ATan  0x00000128          96      8  Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_SinCos
                             0x000000E8          64      8  Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_lc        0x0001E514          16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_uc        0x0001E504          16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ipow10        0x000001D0         160      8  Cnst  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_kahan_aT2     0x000117E8         256      4  Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_init_data__       0x0001E568        [32]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x0001E544        [36]      4  Cnst  Lc  [ Linker created ]
  armBitRevIndexTable1024    0x0001734A       3 600      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable128     0x00016ABA         416      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable16      0x000169C2          40      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable2048    0x0001815A       7 616      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable256     0x00016C5A         880      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable32      0x000169EA          96      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable4096    0x00019F1A       8 064      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable512     0x00016FCA         896      2  Cnst  Gb  CommonTables.o
  armBitRevIndexTable64      0x00016A4A         112      2  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len1024    0x00010C30          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len128     0x00010C00          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len16      0x00010BD0          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len2048    0x00010C40          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len256     0x00010C10          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len32      0x00010BE0          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len4096    0x00010C50          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len512     0x00010C20          16      4  Cnst  Gb  CommonTables.o
  arm_cfft_sR_f32_len64      0x00010BF0          16      4  Cnst  Gb  CommonTables.o
  glyph_bitmap               0x0001DBC2       1 727         Cnst  Lc  LCD.o
  glyph_dsc                  0x00000950         768      4  Cnst  Lc  LCD.o
  twiddleCoef_1024           0x00002BD0       8 192      4  Cnst  Gb  CommonTables.o
  twiddleCoef_128            0x00000FD0       1 024      4  Cnst  Gb  CommonTables.o
  twiddleCoef_16             0x00000C50         128      4  Cnst  Gb  CommonTables.o
  twiddleCoef_2048           0x00004BD0      16 384      4  Cnst  Gb  CommonTables.o
  twiddleCoef_256            0x000013D0       2 048      4  Cnst  Gb  CommonTables.o
  twiddleCoef_32             0x00000CD0         256      4  Cnst  Gb  CommonTables.o
  twiddleCoef_4096           0x00008BD0      32 768      4  Cnst  Gb  CommonTables.o
  twiddleCoef_512            0x00001BD0       4 096      4  Cnst  Gb  CommonTables.o
  twiddleCoef_64             0x00000DD0         512      4  Cnst  Gb  CommonTables.o

Read-only data symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x000000E8  __SEGGER_RTL_float64_SinCos
                                                 64      8  Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000128  __SEGGER_RTL_float64_ATan          96      8  Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000188  __SEGGER_RTL_aPower2               72      8  Cnst  Lc  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000001D0  __SEGGER_RTL_ipow10               160      8  Cnst  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000950  glyph_dsc                         768      4  Cnst  Lc  LCD.o
  0x00000C50  twiddleCoef_16                    128      4  Cnst  Gb  CommonTables.o
  0x00000CD0  twiddleCoef_32                    256      4  Cnst  Gb  CommonTables.o
  0x00000DD0  twiddleCoef_64                    512      4  Cnst  Gb  CommonTables.o
  0x00000FD0  twiddleCoef_128                 1 024      4  Cnst  Gb  CommonTables.o
  0x000013D0  twiddleCoef_256                 2 048      4  Cnst  Gb  CommonTables.o
  0x00001BD0  twiddleCoef_512                 4 096      4  Cnst  Gb  CommonTables.o
  0x00002BD0  twiddleCoef_1024                8 192      4  Cnst  Gb  CommonTables.o
  0x00004BD0  twiddleCoef_2048               16 384      4  Cnst  Gb  CommonTables.o
  0x00008BD0  twiddleCoef_4096               32 768      4  Cnst  Gb  CommonTables.o
  0x00010BD0  arm_cfft_sR_f32_len16              16      4  Cnst  Gb  CommonTables.o
  0x00010BE0  arm_cfft_sR_f32_len32              16      4  Cnst  Gb  CommonTables.o
  0x00010BF0  arm_cfft_sR_f32_len64              16      4  Cnst  Gb  CommonTables.o
  0x00010C00  arm_cfft_sR_f32_len128             16      4  Cnst  Gb  CommonTables.o
  0x00010C10  arm_cfft_sR_f32_len256             16      4  Cnst  Gb  CommonTables.o
  0x00010C20  arm_cfft_sR_f32_len512             16      4  Cnst  Gb  CommonTables.o
  0x00010C30  arm_cfft_sR_f32_len1024            16      4  Cnst  Gb  CommonTables.o
  0x00010C40  arm_cfft_sR_f32_len2048            16      4  Cnst  Gb  CommonTables.o
  0x00010C50  arm_cfft_sR_f32_len4096            16      4  Cnst  Gb  CommonTables.o
  0x000117E8  __SEGGER_RTL_kahan_aT2            256      4  Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000169C2  armBitRevIndexTable16              40      2  Cnst  Gb  CommonTables.o
  0x000169EA  armBitRevIndexTable32              96      2  Cnst  Gb  CommonTables.o
  0x00016A4A  armBitRevIndexTable64             112      2  Cnst  Gb  CommonTables.o
  0x00016ABA  armBitRevIndexTable128            416      2  Cnst  Gb  CommonTables.o
  0x00016C5A  armBitRevIndexTable256            880      2  Cnst  Gb  CommonTables.o
  0x00016FCA  armBitRevIndexTable512            896      2  Cnst  Gb  CommonTables.o
  0x0001734A  armBitRevIndexTable1024         3 600      2  Cnst  Gb  CommonTables.o
  0x0001815A  armBitRevIndexTable2048         7 616      2  Cnst  Gb  CommonTables.o
  0x00019F1A  armBitRevIndexTable4096         8 064      2  Cnst  Gb  CommonTables.o
  0x0001DBC2  glyph_bitmap                    1 727         Cnst  Lc  LCD.o
  0x0001E378  __SEGGER_RTL_aSqrtData            384         Cnst  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001E504  __SEGGER_RTL_hex_uc                16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001E514  __SEGGER_RTL_hex_lc                16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x0001E544  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x0001E568  __SEGGER_init_data__             [32]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name and then by address:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x00080000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00080000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x00000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x0001E5AE                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x0001E5AE                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x00000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x00080000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00080000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x00000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x0001E5AE                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x0001E5AE                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x00000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x10010000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00010000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x10000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x100062F8                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x000062F8                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x10000000                     ----  Gb  [ Linker created ]
  __RAM2_segment_end__       0x20008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_size__      0x00008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_end__  0x20008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_size__
                             0x00000800                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_start__
                             0x20007800                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20008000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x10008000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x10000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20008000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x10008000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x10000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000800                     ----  Gb  [ Linker created ]
  __ctors_end__              0x0001E360                     ----  Gb  [ Linker created ]
  __ctors_start__            0x0001E35C                     ----  Gb  [ Linker created ]
  __stack_end__              0x20008000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x00000000       [228]    256  Code  Gb  LPC177x_8x_Vectors.o
  _vectors_end               0x000000E4                256  Code  Lc  LPC177x_8x_Vectors.o

Untyped symbols by address and then by name:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x00000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000000  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  _vectors                        [228]    256  Code  Gb  LPC177x_8x_Vectors.o
  0x000000E4  _vectors_end                             256  Code  Lc  LPC177x_8x_Vectors.o
  0x00000800  __RAM2_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00000800  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x000062F8  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00008000  __RAM2_segment_size__                         ----  Gb  [ Linker created ]
  0x00010000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x0001E35C  __ctors_start__                               ----  Gb  [ Linker created ]
  0x0001E360  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x0001E5AE  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x0001E5AE  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x0001E5AE  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x0001E5AE  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00080000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x00080000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x00080000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x00080000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x10000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x10000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x10000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x10000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x100062F8  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x10008000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x10008000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x10010000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]
  0x20000000  __RAM2_segment_start__                        ----  Gb  [ Linker created ]
  0x20007800  __RAM2_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20008000  __RAM2_segment_end__                          ----  Gb  [ Linker created ]
  0x20008000  __RAM2_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20008000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20008000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20008000  __stack_end__                                 ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

   33 176 bytes read-only  code
   91 154 bytes read-only  data
   27 383 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       00000000-0007ffff      524 288      124 334  23.71%      399 954  76.29%            0   0.00%
  RAM1        10000000-1000ffff       65 536       25 335  38.66%       40 201  61.34%            0   0.00%
  RAM2        20000000-20007fff       32 768        2 048   6.25%       30 720  93.75%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
