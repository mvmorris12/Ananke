***********************************************************************************************
***                                                                                         ***
***                                    LINK INFORMATION                                     ***
***                                                                                         ***
***********************************************************************************************

Linker version:

  SEGGER ARM Linker 4.14.0 compiled Aug 26 2021 19:08:15
  Copyright (c) 2017-2021 SEGGER Microcontroller GmbH    www.segger.com


***********************************************************************************************
***                                                                                         ***
***                                     MODULE SUMMARY                                      ***
***                                                                                         ***
***********************************************************************************************

Memory use by input file:

  Object File                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  ESP32.o                                               302          20                        
  I2C.o                                               1 904                                 448
  Interrupts.o                                          488          74                       4
  LCD.o                                               1 170                       4            
  LEDs.o                                                346                                    
  LPC1700_Startup.o                                      16                                    
  LPC177x_8x_Vectors.o                                  300                                    
  Microphone.o                                          224                              32 777
  Power.o                                                46                                    
  RAM.o                                               1 058          16                        
  RTC.o                                                  30                                   4
  SEGGER_THUMB_Startup.o                                 20                                    
  SEGGER_crtinit_v7m_little.o                            70                                    
  SPI.o                                                 770                                  24
  main.o                                                302          67                       4
  system_LPC177x_8x.o                                 2 246                      16            
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (16 objects)                               9 292         177          20      33 261
  ---------------------------------------------  ----------  ----------  ----------  ----------
  libc_v7m_t_le_eabi_balanced.a                       7 202         319                   1 160
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (1 archives)                               7 202         319                   1 160
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Linker created (shared data, fills, blocks):                       56                   2 048
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             16 494         552          20      36 469
  =============================================  ==========  ==========  ==========  ==========

Memory use by archive:

  Archive member                                    RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)          422          20                   1 160
  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
                                                      3 324          67                        
  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                      1 720                                    
  floatops.o (libc_v7m_t_le_eabi_balanced.a)            772                                    
  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                        208                                    
  intops.o (libc_v7m_t_le_eabi_balanced.a)                8                                    
  prinops.o (libc_v7m_t_le_eabi_balanced.a)             212         160                        
  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
                                                         82                                    
  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
                                                        316                                    
  strops.o (libc_v7m_t_le_eabi_balanced.a)               38                                    
  utilops.o (libc_v7m_t_le_eabi_balanced.a)             100          72                        
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (11 members from 1 archives)               7 202         319                   1 160
  Objects (16 files)                                  9 292         177          20      33 261
  Linker created (shared data, fills, blocks):                       56                   2 048
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             16 494         552          20      36 469
  =============================================  ==========  ==========  ==========  ==========

Detailed memory use by linker:

  Description                                       RX Code     RO Data     RW Data     ZI Data
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Initialization table                                               56                        
  Memory for block 'stack'                                                                2 048
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Subtotal (linker created):                                         56                   2 048
  ---------------------------------------------  ----------  ----------  ----------  ----------
  Objects (16 files)                                  9 292         177          20      33 261
  Archives (1 files)                                  7 202         319                   1 160
  =============================================  ==========  ==========  ==========  ==========
  Total:                                             16 494         552          20      36 469
  =============================================  ==========  ==========  ==========  ==========


***********************************************************************************************
***                                                                                         ***
***                                     SECTION DETAIL                                      ***
***                                                                                         ***
***********************************************************************************************

Sections by address:

  Range              Symbol or [section] Name         Size  Al  Init  Ac  Object File
  -----------------  -------------------------  ----------  --  ----  --  -----------
  00000000-000000e3  _vectors                          228  256
                                                                Code  RX  LPC177x_8x_Vectors.o
  000000e4-000000e5  NMI_Handler                         2   2  Code  RX  LPC177x_8x_Vectors.o
  000000e6-000000e7  SVC_Handler                         2   2  Code  RX  LPC177x_8x_Vectors.o
  000000e8-0000012f  __SEGGER_RTL_aPower2               72   8  Cnst  RO  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  00000130-000001cf  __SEGGER_RTL_ipow10               160   8  Cnst  RO  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  000001d0-00000533  I2C0_IRQHandler                   868   4  Code  RX  I2C.o
  00000534-000008af  I2C1_IRQHandler                   892   4  Code  RX  I2C.o
  000008b0-000008c3  _start                             20   4  Code  RX  SEGGER_THUMB_Startup.o
  000008c4-00000b03  __aeabi_dadd                      576   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000b04-00000b0b  __aeabi_dsub                        8   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000b0c-00000c3b  __aeabi_dmul                      304   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000c3c-00000dff  __aeabi_ddiv                      452   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000e00-00000e33  __aeabi_dcmpeq                     52   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000e34-00000e6f  __aeabi_dcmpge                     60   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000e70-00000ea7  __aeabi_dcmpgt                     56   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000ea8-00000edf  __aeabi_dcmplt                     56   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000ee0-00000f1f  __aeabi_d2ulz                      64   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000f20-00000f7b  __aeabi_ul2d                       92   4  Code  RX  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00000f7c-0000104b  __aeabi_uldivmod                  208   4  Code  RX  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0000104c-00001083  strcpy                             56   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001084-000010cf  strlen                             76   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  000010d0-0000111b  memcpy                             76   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0000111c-00001187  __aeabi_memclr                    108   4  Code  RX  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  00001188-00001e83  __SEGGER_RTL_vfprintf_short_float_long
                                                     3 324   4  Code  RX  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00001e84-00001f01  led_status                        126   4  Code  RX  LEDs.o
  00001f02-000023fb  SystemCoreClockUpdate           1 274   2  Code  RX  system_LPC177x_8x.o
  000023fc-00002525  SystemInit                        298   2  Code  RX  system_LPC177x_8x.o
  00002526-000027c7  SystemInit_ExtMemCtl              674   2  Code  RX  system_LPC177x_8x.o
  000027c8-00002845  led_init                          126   2  Code  RX  LEDs.o
  00002846-00002857  led_green_on                       18   2  Code  RX  LEDs.o
  00002858-00002869  led_green_off                      18   2  Code  RX  LEDs.o
  0000286a-000028a3  led_flash                          58   2  Code  RX  LEDs.o
  000028a4-0000290d  SSP1_IRQHandler                   106   2  Code  RX  SPI.o
  0000290e-000029c7  SSP0_Init                         186   2  Code  RX  SPI.o
  000029c8-00002a51  SSPReceive                        138   2  Code  RX  SPI.o
  00002a52-00002a93  EINT0_IRQHandler                   66   2  Code  RX  Interrupts.o
  00002a94-00002ad5  EINT2_IRQHandler                   66   2  Code  RX  Interrupts.o
  00002ad6-00002b0f  lcd_interrupt_enable               58   2  Code  RX  Interrupts.o
  00002b10-00002b59  esp32_interrupt_enable             74   2  Code  RX  Interrupts.o
  00002b5a-00002b77  RTC_IRQHandler                     30   2  Code  RX  RTC.o
  00002b78-00002f51  ram_init                          986   2  Code  RX  RAM.o
  00002f52-00002f7f  enable_10v_boost                   46   2  Code  RX  Power.o
  00002f80-00002fc9  esp32_init                         74   2  Code  RX  ESP32.o
  00002fca-00002fdb  esp32_get_accel_data               18   2  Code  RX  ESP32.o
  00002fdc-00002ffd  esp32_start_ble                    34   2  Code  RX  ESP32.o
  00002ffe-0000300f  delay                              18   2  Code  RX  main.o
  00003010-00003025  delay_ms                           22   2  Code  RX  main.o
  00003026-00003063  SystemClockUpdate                  62   2  Code  RX  main.o
  00003064-00003091  HardFault_Handler                  46   2  Code  RX  main.o
  00003092-0000310b  main                              122   2  Code  RX  main.o
  0000310c-00003155  lcd_test                           74   2  Code  RX  LCD.o
  00003156-0000322b  lcd_draw_circle                   214   2  Code  RX  LCD.o
  0000322c-000033e5  InitLCDPorts                      442   2  Code  RX  LCD.o
  000033e6-000033e7  PendSV_Handler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  000033e8-000033e9  SysTick_Handler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  000033ea-000033eb  WDT_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  000033ec-000033ed  TIMER0_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  000033ee-000033ef  TIMER1_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  000033f0-000033f1  TIMER2_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  000033f2-000033f3  TIMER3_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  000033f4-000033f5  UART0_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  000033f6-000033f7  UART1_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  000033f8-000033f9  UART2_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  000033fa-000033fb  UART3_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  000033fc-000033fd  PWM1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  000033fe-000033ff  I2C2_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003400-00003401  SPIFI_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003402-00003403  PLL0_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003404-00003405  EINT1_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003406-00003407  EINT3_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003408-00003409  ADC_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  0000340a-0000340b  BOD_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  0000340c-0000340d  USB_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  0000340e-0000340f  CAN_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003410-00003411  DMA_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003412-00003413  ENET_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003414-00003415  MCI_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003416-00003417  MCPWM_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003418-00003419  QEI_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  0000341a-0000341b  PLL1_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  0000341c-0000341d  USBActivity_IRQHandler              2   2  Code  RX  LPC177x_8x_Vectors.o
  0000341e-0000341f  CANActivity_IRQHandler              2   2  Code  RX  LPC177x_8x_Vectors.o
  00003420-00003421  UART4_IRQHandler                    2   2  Code  RX  LPC177x_8x_Vectors.o
  00003422-00003423  SSP2_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003424-00003425  LCD_IRQHandler                      2   2  Code  RX  LPC177x_8x_Vectors.o
  00003426-00003427  PWM0_IRQHandler                     2   2  Code  RX  LPC177x_8x_Vectors.o
  00003428-00003429  EEPROM_IRQHandler                   2   2  Code  RX  LPC177x_8x_Vectors.o
  0000342a-00003437  __SEGGER_RTL_float64_isnan
                                                        14   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003438-00003471  ldexp(double, int)                 58   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003472-00003497  frexp(double, int*)                38   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003498-00003575  floor(double)                     222   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003576-0000359b  strnlen                            38   2  Code  RX  strops.o (libc_v7m_t_le_eabi_balanced.a)
  0000359c-000035e1  printf_rtt                         70   2  Code  RX  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  000035e2-0000364b  _DoInit                           106   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0000364c-00003669  __SEGGER_RTL_print_padding
                                                        30   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0000366a-0000367b  __SEGGER_RTL_pre_padding           18   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0000367c-000036a7  __NVIC_EnableIRQ                   44   2  Code  RX  I2C.o
  000036a8-0000370b  I2C1_Init                         100   2  Code  RX  I2C.o
  0000370c-000037eb  I2S_IRQHandler                    224   2  Code  RX  Microphone.o
  000037ec-0000385b  SSP0_IRQHandler                   112   2  Code  RX  SPI.o
  0000385c-00003887  __NVIC_EnableIRQ                   44   2  Code  RX  SPI.o
  00003888-0000393f  SSPSend                           184   2  Code  RX  SPI.o
  00003940-000039bf  GPIO_IRQHandler                   128   2  Code  RX  Interrupts.o
  000039c0-000039f3  __NVIC_DisableIRQ                  52   2  Code  RX  Interrupts.o
  000039f4-00003a1f  __NVIC_EnableIRQ                   44   2  Code  RX  Interrupts.o
  00003a20-00003a67  ram_write                          72   2  Code  RX  RAM.o
  00003a68-00003b17  esp32_read                        176   2  Code  RX  ESP32.o
  00003b18-00003b37  delay_short                        32   2  Code  RX  main.o
  00003b38-00003b67  lcd_draw_pixel                     48   2  Code  RX  LCD.o
  00003b68-00003b7f  lcd_init                           24   2  Code  RX  LCD.o
  00003b80-00003cef  lcd_config                        368   2  Code  RX  LCD.o
  00003cf0-00003cff  reset_handler                      16   2  Code  RX  LPC1700_Startup.o
  00003d00-00003d13  __SEGGER_RTL_float64_isinf
                                                        20   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003d14-00003d17  __SEGGER_RTL_float64_signbit
                                                         4   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003d18-00003e73  fmod(double, double)              348   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003e74-00003eb7  __SEGGER_RTL_float64_normalize
                                                        68   2  Code  RX  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  00003eb8-00003ebf  abs                                 8   2  Code  RX  intops.o (libc_v7m_t_le_eabi_balanced.a)
  00003ec0-00003f23  __SEGGER_RTL_pow10                100   2  Code  RX  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  00003f24-00003f2f  __SEGGER_RTL_stdout_write          12   2  Code  RX  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  00003f30-00003f8b  SEGGER_RTT_WriteNoLock             92   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00003f8c-00003f9f  _GetAvailWriteSpace                20   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00003fa0-00003fdf  _WriteNoCheck                      64   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00003fe0-00004037  _WriteBlocking                     88   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00004038-0000406b  SEGGER_RTT_Write                   52   2  Code  RX  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0000406c-00004083  __SEGGER_RTL_prin_flush            24   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00004084-00004107  __SEGGER_RTL_putc                 132   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00004108-0000410f  __SEGGER_RTL_init_prin              8   2  Code  RX  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  00004110-00004112  [.rodata..L.str]                    3   1  Cnst  RO  Interrupts.o
  00004113-00004115  [.rodata..L.str.1]                  3   1  Cnst  RO  Interrupts.o
  00004116-00004118  [.rodata..L.str.2]                  3   1  Cnst  RO  Interrupts.o
  00004119-0000411b  [.rodata..L.str.3]                  3   1  Cnst  RO  Interrupts.o
  0000411c-0000414a  [.rodata..L.str.4]                 47   1  Cnst  RO  Interrupts.o
  0000414b-00004159  [.rodata..L.str.5]                 15   1  Cnst  RO  Interrupts.o
  0000415a-00004160  [.rodata.libc..L.str.2]             7   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  00004161-00004167  [.rodata.libc..L.str]               7   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00004168-00004175  [.rodata..L.str.3]                 14   1  Cnst  RO  main.o
  00004176-00004182  [.rodata..L.str]                   13   1  Cnst  RO  main.o
  00004183-0000418b  [.rodata.libc..L.str]               9   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0000418c-00004190  [.rodata.libc..L.str.1]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00004191-00004195  [.rodata.libc..L.str.2]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  00004196-0000419a  [.rodata.libc..L.str.3]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0000419b-0000419f  [.rodata.libc..L.str.4]             5   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  000041a0-000041a3  [.init_array]                       4   4  ----  --  LPC1700_Startup.o
  000041a4-000041b3  [.rodata..L.str]                   16   1  Cnst  RO  RAM.o
  000041b4-000041c7  [.rodata..L.str]                   20   1  Cnst  RO  ESP32.o
  000041c8-000041db  [.rodata..L.str.1]                 20   1  Cnst  RO  main.o
  000041dc-000041eb  [.rodata..L.str.2]                 16   1  Cnst  RO  main.o
  000041ec-000041ef  [.rodata..L.str.4]                  4   1  Cnst  RO  main.o
  000041f0-000041f3  [.rodata.libc..L.str.1]             4   1  Cnst  RO  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  000041f4-000041f7  [.rodata.libc..L.str.5]             4   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  000041f8-000041fb  [.rodata.libc..L.str.6]             4   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  000041fc-0000420b  __SEGGER_RTL_hex_uc                16   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0000420c-0000421b  __SEGGER_RTL_hex_lc                16   1  Cnst  RO  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0000421c-0000423b  __SEGGER_init_ctors                32   4  Code  RX  SEGGER_crtinit_v7m_little.o
  0000423c-0000425f  __SEGGER_init_table__              36   4  Cnst  RO  [ Linker created ]
  00004260-00004273  __SEGGER_init_data__               20   4  Cnst  RO  [ Linker created ]
  00004274-00004285  __SEGGER_init_zero                 18   2  Code  RX  SEGGER_crtinit_v7m_little.o
  00004286-00004299  __SEGGER_init_copy                 20   2  Code  RX  SEGGER_crtinit_v7m_little.o
  0000429a-0fffffff  ( UNUSED .=.+268418406 )   268 418 406
                                                             -  ----  -   -
  10000000-10007fff  I2SRXBuffer                    32 768   4  Zero  ZI  Microphone.o
  10008000-10008077  _SEGGER_RTT                       120   4  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  10008078-10008083  I2C_WriteLength                    12   4  Zero  ZI  I2C.o
  10008084-1000808f  I2C_Timeout                        12   4  Zero  ZI  I2C.o
  10008090-1000809b  I2C_ReadLength                     12   4  Zero  ZI  I2C.o
  1000809c-100080a7  I2C_MasterState                    12   4  Zero  ZI  I2C.o
  100080a8-100080ab  readings_skipped                    4   4  Zero  ZI  Microphone.o
  100080ac-100080af  interrupt1RxTimeoutStat             4   4  Zero  ZI  SPI.o
  100080b0-100080b3  interrupt1RxStat                    4   4  Zero  ZI  SPI.o
  100080b4-100080b7  interrupt1OverRunStat               4   4  Zero  ZI  SPI.o
  100080b8-100080bb  interrupt0RxTimeoutStat             4   4  Zero  ZI  SPI.o
  100080bc-100080bf  interrupt0RxStat                    4   4  Zero  ZI  SPI.o
  100080c0-100080c3  interrupt0OverRunStat               4   4  Zero  ZI  SPI.o
  100080c4-100080c7  eint0_counter                       4   4  Zero  ZI  Interrupts.o
  100080c8-100080cb  alarm_on                            4   4  Zero  ZI  RTC.o
  100080cc-100080cf  WrIndex1                            4   4  Zero  ZI  I2C.o
  100080d0-100080d3  WrIndex0                            4   4  Zero  ZI  I2C.o
  100080d4-100080d7  RdIndex1                            4   4  Zero  ZI  I2C.o
  100080d8-100080db  RdIndex0                            4   4  Zero  ZI  I2C.o
  100080dc-100080df  I2SReadLength                       4   4  Zero  ZI  Microphone.o
  100080e0-100080e3  Continue                            4   4  Zero  ZI  main.o
  100080e4-100084e3  _acUpBuffer                     1 024   1  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  100084e4-100085a3  I2C_SlaveBuffer                   192   1  Zero  ZI  I2C.o
  100085a4-10008663  I2C_MasterBuffer                  192   1  Zero  ZI  I2C.o
  10008664-10008673  _acDownBuffer                      16   1  Zero  ZI  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  10008674-10008674  I2SRXDone                           1   1  Zero  ZI  Microphone.o
  10008675-10008677  ( UNUSED .=.+3 )                    3   -  ----  -   -
  10008678-1000867b  lcd_arr                             4   4  Init  RW  LCD.o
  1000867c-1000867f  USBClock                            4   4  Init  RW  system_LPC177x_8x.o
  10008680-10008683  SystemCoreClock                     4   4  Init  RW  system_LPC177x_8x.o
  10008684-10008687  PeripheralClock                     4   4  Init  RW  system_LPC177x_8x.o
  10008688-1000868b  EMCClock                            4   4  Init  RW  system_LPC177x_8x.o
  1000868c-200077ff  ( UNUSED .=.+268431732 )   268 431 732
                                                             -  ----  -   -
  20007800-20007fff  [.bss.block.stack]              2 048   8  None  ZI  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                       SYMBOL LIST                                       ***
***                                                                                         ***
***********************************************************************************************

Function symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  ADC_IRQHandler             0x00003409                  2  Code  Wk  LPC177x_8x_Vectors.o
  BOD_IRQHandler             0x0000340B                  2  Code  Wk  LPC177x_8x_Vectors.o
  CANActivity_IRQHandler     0x0000341F                  2  Code  Wk  LPC177x_8x_Vectors.o
  CAN_IRQHandler             0x0000340F                  2  Code  Wk  LPC177x_8x_Vectors.o
  DMA_IRQHandler             0x00003411                  2  Code  Wk  LPC177x_8x_Vectors.o
  EEPROM_IRQHandler          0x00003429                  2  Code  Wk  LPC177x_8x_Vectors.o
  EINT0_IRQHandler           0x00002A53          66      2  Code  Gb  Interrupts.o
  EINT1_IRQHandler           0x00003405                  2  Code  Wk  LPC177x_8x_Vectors.o
  EINT2_IRQHandler           0x00002A95          66      2  Code  Gb  Interrupts.o
  EINT3_IRQHandler           0x00003407                  2  Code  Wk  LPC177x_8x_Vectors.o
  ENET_IRQHandler            0x00003413                  2  Code  Wk  LPC177x_8x_Vectors.o
  GPIO_IRQHandler            0x00003941         128      2  Code  Gb  Interrupts.o
  HardFault_Handler          0x00003065          46      2  Code  Gb  main.o
  I2C0_IRQHandler            0x000001D1         868      4  Code  Gb  I2C.o
  I2C1_IRQHandler            0x00000535         892      4  Code  Gb  I2C.o
  I2C1_Init                  0x000036A9         100      2  Code  Gb  I2C.o
  I2C2_IRQHandler            0x000033FF                  2  Code  Wk  LPC177x_8x_Vectors.o
  I2S_IRQHandler             0x0000370D         224      2  Code  Gb  Microphone.o
  InitLCDPorts               0x0000322D         442      2  Code  Gb  LCD.o
  LCD_IRQHandler             0x00003425                  2  Code  Wk  LPC177x_8x_Vectors.o
  MCI_IRQHandler             0x00003415                  2  Code  Wk  LPC177x_8x_Vectors.o
  MCPWM_IRQHandler           0x00003417                  2  Code  Wk  LPC177x_8x_Vectors.o
  NMI_Handler                0x000000E5                  2  Code  Wk  LPC177x_8x_Vectors.o
  PLL0_IRQHandler            0x00003403                  2  Code  Wk  LPC177x_8x_Vectors.o
  PLL1_IRQHandler            0x0000341B                  2  Code  Wk  LPC177x_8x_Vectors.o
  PWM0_IRQHandler            0x00003427                  2  Code  Wk  LPC177x_8x_Vectors.o
  PWM1_IRQHandler            0x000033FD                  2  Code  Wk  LPC177x_8x_Vectors.o
  PendSV_Handler             0x000033E7                  2  Code  Wk  LPC177x_8x_Vectors.o
  QEI_IRQHandler             0x00003419                  2  Code  Wk  LPC177x_8x_Vectors.o
  RTC_IRQHandler             0x00002B5B          30      2  Code  Gb  RTC.o
  Reset_Handler              0x00003CF1                  2  Code  Gb  LPC1700_Startup.o
  SEGGER_RTT_Write           0x00004039          52      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  SEGGER_RTT_WriteNoLock     0x00003F31          92      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  SPIFI_IRQHandler           0x00003401                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSP0_IRQHandler            0x000037ED         112      2  Code  Gb  SPI.o
  SSP0_Init                  0x0000290F         186      2  Code  Gb  SPI.o
  SSP1_IRQHandler            0x000028A5         106      2  Code  Gb  SPI.o
  SSP2_IRQHandler            0x00003423                  2  Code  Wk  LPC177x_8x_Vectors.o
  SSPReceive                 0x000029C9         138      2  Code  Gb  SPI.o
  SSPSend                    0x00003889         184      2  Code  Gb  SPI.o
  SVC_Handler                0x000000E7                  2  Code  Wk  LPC177x_8x_Vectors.o
  SysTick_Handler            0x000033E9                  2  Code  Wk  LPC177x_8x_Vectors.o
  SystemClockUpdate          0x00003027          62      2  Code  Gb  main.o
  SystemCoreClockUpdate      0x00001F03       1 274      2  Code  Gb  system_LPC177x_8x.o
  SystemInit                 0x000023FD         298      2  Code  Gb  system_LPC177x_8x.o
  SystemInit_ExtMemCtl       0x00002527         674      2  Code  Lc  system_LPC177x_8x.o
  TIMER0_IRQHandler          0x000033ED                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER1_IRQHandler          0x000033EF                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER2_IRQHandler          0x000033F1                  2  Code  Wk  LPC177x_8x_Vectors.o
  TIMER3_IRQHandler          0x000033F3                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART0_IRQHandler           0x000033F5                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART1_IRQHandler           0x000033F7                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART2_IRQHandler           0x000033F9                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART3_IRQHandler           0x000033FB                  2  Code  Wk  LPC177x_8x_Vectors.o
  UART4_IRQHandler           0x00003421                  2  Code  Wk  LPC177x_8x_Vectors.o
  USBActivity_IRQHandler     0x0000341D                  2  Code  Wk  LPC177x_8x_Vectors.o
  USB_IRQHandler             0x0000340D                  2  Code  Wk  LPC177x_8x_Vectors.o
  WDT_IRQHandler             0x000033EB                  2  Code  Wk  LPC177x_8x_Vectors.o
  _DoInit                    0x000035E3         106      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _GetAvailWriteSpace        0x00003F8D          20      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _WriteBlocking             0x00003FE1          88      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _WriteNoCheck              0x00003FA1          64      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  __NVIC_DisableIRQ          0x000039C1          52      2  Code  Lc  Interrupts.o
  __NVIC_EnableIRQ           0x0000367D          44      2  Code  Lc  I2C.o
  __NVIC_EnableIRQ           0x0000385D          44      2  Code  Lc  SPI.o
  __NVIC_EnableIRQ           0x000039F5          44      2  Code  Lc  Interrupts.o
  __SEGGER_RTL_float64_isinf
                             0x00003D01          20      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_isnan
                             0x0000342B          14      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_normalize
                             0x00003E75          68      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_float64_signbit
                             0x00003D15           4      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_init_prin     0x00004109           8      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_pow10         0x00003EC1         100      2  Code  Gb  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_pre_padding   0x0000366B          18      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_prin_flush    0x0000406D          24      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_print_padding
                             0x0000364D          30      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_putc          0x00004085         132      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_stdout_write  0x00003F25          12      2  Code  Lc  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf      0x00001189       3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_vfprintf_short_float_long
                             0x00001189       3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_init_copy         0x00004287          20      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  __SEGGER_init_ctors        0x0000421D          24      4  Code  Wk  SEGGER_crtinit_v7m_little.o
  __SEGGER_init_done         0x000008BB                  4  Code  Gb  SEGGER_THUMB_Startup.o
  __SEGGER_init_zero         0x00004275          18      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  __aeabi_d2ulz              0x00000EE1          62      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dadd               0x000008C5         574      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpeq             0x00000E01          50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpge             0x00000E35          60      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmpgt             0x00000E71          56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dcmplt             0x00000EA9          56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_ddiv               0x00000C3D         450      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dmul               0x00000B0D         304      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_dsub               0x00000B05           8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr             0x0000111D         106      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr4            0x0000111D                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memclr8            0x0000111D                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy             0x000010D1                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy4            0x000010DD                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memcpy8            0x000010DD                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset             0x0000111F                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset4            0x0000111F                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_memset8            0x0000111F                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_ul2d               0x00000F21          90      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  __aeabi_uldivmod           0x00000F7D         206      4  Code  Wk  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  _start                     0x000008B1          14      4  Code  Gb  SEGGER_THUMB_Startup.o
  abs                        0x00003EB9           8      2  Code  Wk  intops.o (libc_v7m_t_le_eabi_balanced.a)
  delay                      0x00002FFF          18      2  Code  Gb  main.o
  delay_ms                   0x00003011          22      2  Code  Gb  main.o
  delay_short                0x00003B19          32      2  Code  Gb  main.o
  enable_10v_boost           0x00002F53          46      2  Code  Gb  Power.o
  esp32_get_accel_data       0x00002FCB          18      2  Code  Gb  ESP32.o
  esp32_init                 0x00002F81          74      2  Code  Gb  ESP32.o
  esp32_interrupt_enable     0x00002B11          74      2  Code  Gb  Interrupts.o
  esp32_read                 0x00003A69         176      2  Code  Gb  ESP32.o
  esp32_start_ble            0x00002FDD          34      2  Code  Gb  ESP32.o
  exit                       0x000008BF           2      4  Code  Gb  SEGGER_THUMB_Startup.o
  floor                      0x00003499         222      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  floor(double)              0x00003499         222      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  fmod                       0x00003D19         348      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  fmod(double, double)       0x00003D19         348      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexp                      0x00003473          38      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  frexp(double, int*)        0x00003473          38      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  lcd_config                 0x00003B81         368      2  Code  Gb  LCD.o
  lcd_draw_circle            0x00003157         214      2  Code  Gb  LCD.o
  lcd_draw_pixel             0x00003B39          48      2  Code  Gb  LCD.o
  lcd_init                   0x00003B69          24      2  Code  Gb  LCD.o
  lcd_interrupt_enable       0x00002AD7          58      2  Code  Gb  Interrupts.o
  lcd_test                   0x0000310D          74      2  Code  Gb  LCD.o
  ldexp                      0x00003439          58      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  ldexp(double, int)         0x00003439          58      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  led_flash                  0x0000286B          58      2  Code  Gb  LEDs.o
  led_green_off              0x00002859          18      2  Code  Gb  LEDs.o
  led_green_on               0x00002847          18      2  Code  Gb  LEDs.o
  led_init                   0x000027C9         126      2  Code  Gb  LEDs.o
  led_status                 0x00001E85         126      4  Code  Gb  LEDs.o
  main                       0x00003093         122      2  Code  Gb  main.o
  memcpy                     0x000010D1          76      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  memset                     0x00001125                  4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  printf                     0x0000359D          70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  printf_rtt                 0x0000359D          70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  ram_init                   0x00002B79         986      2  Code  Gb  RAM.o
  ram_write                  0x00003A21          72      2  Code  Gb  RAM.o
  reset_handler              0x00003CF1                  2  Code  Gb  LPC1700_Startup.o
  strcpy                     0x0000104D          56      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  strlen                     0x00001085          74      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  strnlen                    0x00003577          38      2  Code  Wk  strops.o (libc_v7m_t_le_eabi_balanced.a)

Function symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x000000E5  NMI_Handler                                2  Code  Wk  LPC177x_8x_Vectors.o
  0x000000E7  SVC_Handler                                2  Code  Wk  LPC177x_8x_Vectors.o
  0x000001D1  I2C0_IRQHandler                   868      4  Code  Gb  I2C.o
  0x00000535  I2C1_IRQHandler                   892      4  Code  Gb  I2C.o
  0x000008B1  _start                             14      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x000008BB  __SEGGER_init_done                         4  Code  Gb  SEGGER_THUMB_Startup.o
  0x000008BF  exit                                2      4  Code  Gb  SEGGER_THUMB_Startup.o
  0x000008C5  __aeabi_dadd                      574      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000B05  __aeabi_dsub                        8      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000B0D  __aeabi_dmul                      304      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000C3D  __aeabi_ddiv                      450      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000E01  __aeabi_dcmpeq                     50      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000E35  __aeabi_dcmpge                     60      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000E71  __aeabi_dcmpgt                     56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000EA9  __aeabi_dcmplt                     56      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000EE1  __aeabi_d2ulz                      62      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000F21  __aeabi_ul2d                       90      4  Code  Wk  floatasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000F7D  __aeabi_uldivmod                  206      4  Code  Wk  intasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000104D  strcpy                             56      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001085  strlen                             74      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000010D1  __aeabi_memcpy                             4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000010D1  memcpy                             76      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000010DD  __aeabi_memcpy4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x000010DD  __aeabi_memcpy8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000111D  __aeabi_memclr                    106      4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000111D  __aeabi_memclr4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000111D  __aeabi_memclr8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000111F  __aeabi_memset                             4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000111F  __aeabi_memset4                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000111F  __aeabi_memset8                            4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001125  memset                                     4  Code  Wk  strasmops_arm.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001189  __SEGGER_RTL_vfprintf           3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001189  __SEGGER_RTL_vfprintf_short_float_long
                                              3 324      4  Code  Gb  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x00001E85  led_status                        126      4  Code  Gb  LEDs.o
  0x00001F03  SystemCoreClockUpdate           1 274      2  Code  Gb  system_LPC177x_8x.o
  0x000023FD  SystemInit                        298      2  Code  Gb  system_LPC177x_8x.o
  0x00002527  SystemInit_ExtMemCtl              674      2  Code  Lc  system_LPC177x_8x.o
  0x000027C9  led_init                          126      2  Code  Gb  LEDs.o
  0x00002847  led_green_on                       18      2  Code  Gb  LEDs.o
  0x00002859  led_green_off                      18      2  Code  Gb  LEDs.o
  0x0000286B  led_flash                          58      2  Code  Gb  LEDs.o
  0x000028A5  SSP1_IRQHandler                   106      2  Code  Gb  SPI.o
  0x0000290F  SSP0_Init                         186      2  Code  Gb  SPI.o
  0x000029C9  SSPReceive                        138      2  Code  Gb  SPI.o
  0x00002A53  EINT0_IRQHandler                   66      2  Code  Gb  Interrupts.o
  0x00002A95  EINT2_IRQHandler                   66      2  Code  Gb  Interrupts.o
  0x00002AD7  lcd_interrupt_enable               58      2  Code  Gb  Interrupts.o
  0x00002B11  esp32_interrupt_enable             74      2  Code  Gb  Interrupts.o
  0x00002B5B  RTC_IRQHandler                     30      2  Code  Gb  RTC.o
  0x00002B79  ram_init                          986      2  Code  Gb  RAM.o
  0x00002F53  enable_10v_boost                   46      2  Code  Gb  Power.o
  0x00002F81  esp32_init                         74      2  Code  Gb  ESP32.o
  0x00002FCB  esp32_get_accel_data               18      2  Code  Gb  ESP32.o
  0x00002FDD  esp32_start_ble                    34      2  Code  Gb  ESP32.o
  0x00002FFF  delay                              18      2  Code  Gb  main.o
  0x00003011  delay_ms                           22      2  Code  Gb  main.o
  0x00003027  SystemClockUpdate                  62      2  Code  Gb  main.o
  0x00003065  HardFault_Handler                  46      2  Code  Gb  main.o
  0x00003093  main                              122      2  Code  Gb  main.o
  0x0000310D  lcd_test                           74      2  Code  Gb  LCD.o
  0x00003157  lcd_draw_circle                   214      2  Code  Gb  LCD.o
  0x0000322D  InitLCDPorts                      442      2  Code  Gb  LCD.o
  0x000033E7  PendSV_Handler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033E9  SysTick_Handler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033EB  WDT_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033ED  TIMER0_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033EF  TIMER1_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033F1  TIMER2_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033F3  TIMER3_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033F5  UART0_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033F7  UART1_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033F9  UART2_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033FB  UART3_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033FD  PWM1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x000033FF  I2C2_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003401  SPIFI_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003403  PLL0_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003405  EINT1_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003407  EINT3_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003409  ADC_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x0000340B  BOD_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x0000340D  USB_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x0000340F  CAN_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003411  DMA_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003413  ENET_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003415  MCI_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003417  MCPWM_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003419  QEI_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x0000341B  PLL1_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x0000341D  USBActivity_IRQHandler                     2  Code  Wk  LPC177x_8x_Vectors.o
  0x0000341F  CANActivity_IRQHandler                     2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003421  UART4_IRQHandler                           2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003423  SSP2_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003425  LCD_IRQHandler                             2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003427  PWM0_IRQHandler                            2  Code  Wk  LPC177x_8x_Vectors.o
  0x00003429  EEPROM_IRQHandler                          2  Code  Wk  LPC177x_8x_Vectors.o
  0x0000342B  __SEGGER_RTL_float64_isnan
                                                 14      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003439  ldexp                              58      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003439  ldexp(double, int)                 58      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003473  frexp                              38      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003473  frexp(double, int*)                38      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003499  floor                             222      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003499  floor(double)                     222      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003577  strnlen                            38      2  Code  Wk  strops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000359D  printf                             70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000359D  printf_rtt                         70      2  Code  Gb  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x000035E3  _DoInit                           106      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000364D  __SEGGER_RTL_print_padding
                                                 30      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000366B  __SEGGER_RTL_pre_padding           18      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000367D  __NVIC_EnableIRQ                   44      2  Code  Lc  I2C.o
  0x000036A9  I2C1_Init                         100      2  Code  Gb  I2C.o
  0x0000370D  I2S_IRQHandler                    224      2  Code  Gb  Microphone.o
  0x000037ED  SSP0_IRQHandler                   112      2  Code  Gb  SPI.o
  0x0000385D  __NVIC_EnableIRQ                   44      2  Code  Lc  SPI.o
  0x00003889  SSPSend                           184      2  Code  Gb  SPI.o
  0x00003941  GPIO_IRQHandler                   128      2  Code  Gb  Interrupts.o
  0x000039C1  __NVIC_DisableIRQ                  52      2  Code  Lc  Interrupts.o
  0x000039F5  __NVIC_EnableIRQ                   44      2  Code  Lc  Interrupts.o
  0x00003A21  ram_write                          72      2  Code  Gb  RAM.o
  0x00003A69  esp32_read                        176      2  Code  Gb  ESP32.o
  0x00003B19  delay_short                        32      2  Code  Gb  main.o
  0x00003B39  lcd_draw_pixel                     48      2  Code  Gb  LCD.o
  0x00003B69  lcd_init                           24      2  Code  Gb  LCD.o
  0x00003B81  lcd_config                        368      2  Code  Gb  LCD.o
  0x00003CF1  Reset_Handler                              2  Code  Gb  LPC1700_Startup.o
  0x00003CF1  reset_handler                              2  Code  Gb  LPC1700_Startup.o
  0x00003D01  __SEGGER_RTL_float64_isinf
                                                 20      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003D15  __SEGGER_RTL_float64_signbit
                                                  4      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003D19  fmod                              348      2  Code  Wk  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003D19  fmod(double, double)              348      2  Code  Gb  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003E75  __SEGGER_RTL_float64_normalize
                                                 68      2  Code  Lc  floatops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003EB9  abs                                 8      2  Code  Wk  intops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003EC1  __SEGGER_RTL_pow10                100      2  Code  Gb  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003F25  __SEGGER_RTL_stdout_write          12      2  Code  Lc  prinops_scanops_rtt.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003F31  SEGGER_RTT_WriteNoLock             92      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003F8D  _GetAvailWriteSpace                20      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003FA1  _WriteNoCheck                      64      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00003FE1  _WriteBlocking                     88      2  Code  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004039  SEGGER_RTT_Write                   52      2  Code  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000406D  __SEGGER_RTL_prin_flush            24      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004085  __SEGGER_RTL_putc                 132      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00004109  __SEGGER_RTL_init_prin              8      2  Code  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000421D  __SEGGER_init_ctors                24      4  Code  Wk  SEGGER_crtinit_v7m_little.o
  0x00004275  __SEGGER_init_zero                 18      2  Code  Wk  SEGGER_crtinit_v7m_little.o
  0x00004287  __SEGGER_init_copy                 20      2  Code  Wk  SEGGER_crtinit_v7m_little.o

Read-write data symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  Continue                   0x100080E0           4      4  Zero  Gb  main.o
  EMCClock                   0x10008688           4      4  Init  Gb  system_LPC177x_8x.o
  I2C_MasterBuffer           0x100085A4         192         Zero  Gb  I2C.o
  I2C_MasterState            0x1000809C          12      4  Zero  Gb  I2C.o
  I2C_ReadLength             0x10008090          12      4  Zero  Gb  I2C.o
  I2C_SlaveBuffer            0x100084E4         192         Zero  Gb  I2C.o
  I2C_Timeout                0x10008084          12      4  Zero  Gb  I2C.o
  I2C_WriteLength            0x10008078          12      4  Zero  Gb  I2C.o
  I2SRXBuffer                0x10000000      32 768      4  Zero  Gb  Microphone.o
  I2SRXDone                  0x10008674           1         Zero  Gb  Microphone.o
  I2SReadLength              0x100080DC           4      4  Zero  Gb  Microphone.o
  PeripheralClock            0x10008684           4      4  Init  Gb  system_LPC177x_8x.o
  RdIndex0                   0x100080D8           4      4  Zero  Gb  I2C.o
  RdIndex1                   0x100080D4           4      4  Zero  Gb  I2C.o
  SystemCoreClock            0x10008680           4      4  Init  Gb  system_LPC177x_8x.o
  USBClock                   0x1000867C           4      4  Init  Gb  system_LPC177x_8x.o
  WrIndex0                   0x100080D0           4      4  Zero  Gb  I2C.o
  WrIndex1                   0x100080CC           4      4  Zero  Gb  I2C.o
  _SEGGER_RTT                0x10008000         120      4  Zero  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _acDownBuffer              0x10008664          16         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  _acUpBuffer                0x100080E4       1 024         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  alarm_on                   0x100080C8           4      4  Zero  Gb  RTC.o
  eint0_counter              0x100080C4           4      4  Zero  Gb  Interrupts.o
  interrupt0OverRunStat      0x100080C0           4      4  Zero  Gb  SPI.o
  interrupt0RxStat           0x100080BC           4      4  Zero  Gb  SPI.o
  interrupt0RxTimeoutStat    0x100080B8           4      4  Zero  Gb  SPI.o
  interrupt1OverRunStat      0x100080B4           4      4  Zero  Gb  SPI.o
  interrupt1RxStat           0x100080B0           4      4  Zero  Gb  SPI.o
  interrupt1RxTimeoutStat    0x100080AC           4      4  Zero  Gb  SPI.o
  lcd_arr                    0x10008678           4      4  Init  Gb  LCD.o
  readings_skipped           0x100080A8           4      4  Zero  Gb  Microphone.o

Read-write data symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x10000000  I2SRXBuffer                    32 768      4  Zero  Gb  Microphone.o
  0x10008000  _SEGGER_RTT                       120      4  Zero  Gb  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x10008078  I2C_WriteLength                    12      4  Zero  Gb  I2C.o
  0x10008084  I2C_Timeout                        12      4  Zero  Gb  I2C.o
  0x10008090  I2C_ReadLength                     12      4  Zero  Gb  I2C.o
  0x1000809C  I2C_MasterState                    12      4  Zero  Gb  I2C.o
  0x100080A8  readings_skipped                    4      4  Zero  Gb  Microphone.o
  0x100080AC  interrupt1RxTimeoutStat             4      4  Zero  Gb  SPI.o
  0x100080B0  interrupt1RxStat                    4      4  Zero  Gb  SPI.o
  0x100080B4  interrupt1OverRunStat               4      4  Zero  Gb  SPI.o
  0x100080B8  interrupt0RxTimeoutStat             4      4  Zero  Gb  SPI.o
  0x100080BC  interrupt0RxStat                    4      4  Zero  Gb  SPI.o
  0x100080C0  interrupt0OverRunStat               4      4  Zero  Gb  SPI.o
  0x100080C4  eint0_counter                       4      4  Zero  Gb  Interrupts.o
  0x100080C8  alarm_on                            4      4  Zero  Gb  RTC.o
  0x100080CC  WrIndex1                            4      4  Zero  Gb  I2C.o
  0x100080D0  WrIndex0                            4      4  Zero  Gb  I2C.o
  0x100080D4  RdIndex1                            4      4  Zero  Gb  I2C.o
  0x100080D8  RdIndex0                            4      4  Zero  Gb  I2C.o
  0x100080DC  I2SReadLength                       4      4  Zero  Gb  Microphone.o
  0x100080E0  Continue                            4      4  Zero  Gb  main.o
  0x100080E4  _acUpBuffer                     1 024         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x100084E4  I2C_SlaveBuffer                   192         Zero  Gb  I2C.o
  0x100085A4  I2C_MasterBuffer                  192         Zero  Gb  I2C.o
  0x10008664  _acDownBuffer                      16         Zero  Lc  SEGGER_RTT.o (libc_v7m_t_le_eabi_balanced.a)
  0x10008674  I2SRXDone                           1         Zero  Gb  Microphone.o
  0x10008678  lcd_arr                             4      4  Init  Gb  LCD.o
  0x1000867C  USBClock                            4      4  Init  Gb  system_LPC177x_8x.o
  0x10008680  SystemCoreClock                     4      4  Init  Gb  system_LPC177x_8x.o
  0x10008684  PeripheralClock                     4      4  Init  Gb  system_LPC177x_8x.o
  0x10008688  EMCClock                            4      4  Init  Gb  system_LPC177x_8x.o

Read-only data symbols by name and then by address:

  Symbol name                   Address        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __SEGGER_RTL_aPower2       0x000000E8          72      8  Cnst  Lc  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_lc        0x0000420C          16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_hex_uc        0x000041FC          16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_RTL_ipow10        0x00000130         160      8  Cnst  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  __SEGGER_init_data__       0x00004260        [20]      4  Cnst  Lc  [ Linker created ]
  __SEGGER_init_table__      0x0000423C        [36]      4  Cnst  Lc  [ Linker created ]

Read-only data symbols by address and then by name:

     Address  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x000000E8  __SEGGER_RTL_aPower2               72      8  Cnst  Lc  utilops.o (libc_v7m_t_le_eabi_balanced.a)
  0x00000130  __SEGGER_RTL_ipow10               160      8  Cnst  Gb  prinops.o (libc_v7m_t_le_eabi_balanced.a)
  0x000041FC  __SEGGER_RTL_hex_uc                16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000420C  __SEGGER_RTL_hex_lc                16         Cnst  Lc  __SEGGER_RTL_vfprintf_short_float_long.o (libc_v7m_t_le_eabi_balanced.a)
  0x0000423C  __SEGGER_init_table__            [36]      4  Cnst  Lc  [ Linker created ]
  0x00004260  __SEGGER_init_data__             [20]      4  Cnst  Lc  [ Linker created ]

Untyped symbols by name and then by address:

  Symbol name                     Value        Size  Align  Type  Bd  Object File
  -------------------------  ----------  ----------  -----  ----  --  -----------
  __FLASH1_segment_end__     0x00080000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_size__    0x00080000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_start__   0x00000000                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_end__
                             0x0000429A                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_size__
                             0x0000429A                     ----  Gb  [ Linker created ]
  __FLASH1_segment_used_start__
                             0x00000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_end__      0x00080000                     ----  Gb  [ Linker created ]
  __FLASH_segment_size__     0x00080000                     ----  Gb  [ Linker created ]
  __FLASH_segment_start__    0x00000000                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_end__
                             0x0000429A                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_size__
                             0x0000429A                     ----  Gb  [ Linker created ]
  __FLASH_segment_used_start__
                             0x00000000                     ----  Gb  [ Linker created ]
  __HEAPSIZE__               0x00000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_end__       0x10010000                     ----  Gb  [ Linker created ]
  __RAM1_segment_size__      0x00010000                     ----  Gb  [ Linker created ]
  __RAM1_segment_start__     0x10000000                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_end__  0x1000868C                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_size__
                             0x0000868C                     ----  Gb  [ Linker created ]
  __RAM1_segment_used_start__
                             0x10000000                     ----  Gb  [ Linker created ]
  __RAM2_segment_end__       0x20008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_size__      0x00008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_start__     0x20000000                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_end__  0x20008000                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_size__
                             0x00000800                     ----  Gb  [ Linker created ]
  __RAM2_segment_used_start__
                             0x20007800                     ----  Gb  [ Linker created ]
  __RAM_segment_end__        0x20008000                     ----  Gb  [ Linker created ]
  __RAM_segment_size__       0x10008000                     ----  Gb  [ Linker created ]
  __RAM_segment_start__      0x10000000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_end__   0x20008000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_size__  0x10008000                     ----  Gb  [ Linker created ]
  __RAM_segment_used_start__
                             0x10000000                     ----  Gb  [ Linker created ]
  __STACKSIZE_PROCESS__      0x00000000                     ----  Gb  [ Linker created ]
  __STACKSIZE__              0x00000800                     ----  Gb  [ Linker created ]
  __ctors_end__              0x000041A4                     ----  Gb  [ Linker created ]
  __ctors_start__            0x000041A0                     ----  Gb  [ Linker created ]
  __stack_end__              0x20008000                     ----  Gb  [ Linker created ]
  __thread_pointer$          0x00000000                     ----  Gb  [ Linker created ]
  _vectors                   0x00000000       [228]    256  Code  Gb  LPC177x_8x_Vectors.o
  _vectors_end               0x000000E4                256  Code  Lc  LPC177x_8x_Vectors.o

Untyped symbols by address and then by name:

       Value  Symbol name                      Size  Align  Type  Bd  Object File
  ----------  -------------------------  ----------  -----  ----  --  -----------
  0x00000000  __FLASH1_segment_start__                      ----  Gb  [ Linker created ]
  0x00000000  __FLASH1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_start__                       ----  Gb  [ Linker created ]
  0x00000000  __FLASH_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x00000000  __HEAPSIZE__                                  ----  Gb  [ Linker created ]
  0x00000000  __STACKSIZE_PROCESS__                         ----  Gb  [ Linker created ]
  0x00000000  __thread_pointer$                             ----  Gb  [ Linker created ]
  0x00000000  _vectors                        [228]    256  Code  Gb  LPC177x_8x_Vectors.o
  0x000000E4  _vectors_end                             256  Code  Lc  LPC177x_8x_Vectors.o
  0x00000800  __RAM2_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00000800  __STACKSIZE__                                 ----  Gb  [ Linker created ]
  0x000041A0  __ctors_start__                               ----  Gb  [ Linker created ]
  0x000041A4  __ctors_end__                                 ----  Gb  [ Linker created ]
  0x0000429A  __FLASH1_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x0000429A  __FLASH1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x0000429A  __FLASH_segment_used_end__
                                                            ----  Gb  [ Linker created ]
  0x0000429A  __FLASH_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00008000  __RAM2_segment_size__                         ----  Gb  [ Linker created ]
  0x0000868C  __RAM1_segment_used_size__
                                                            ----  Gb  [ Linker created ]
  0x00010000  __RAM1_segment_size__                         ----  Gb  [ Linker created ]
  0x00080000  __FLASH1_segment_end__                        ----  Gb  [ Linker created ]
  0x00080000  __FLASH1_segment_size__                       ----  Gb  [ Linker created ]
  0x00080000  __FLASH_segment_end__                         ----  Gb  [ Linker created ]
  0x00080000  __FLASH_segment_size__                        ----  Gb  [ Linker created ]
  0x10000000  __RAM1_segment_start__                        ----  Gb  [ Linker created ]
  0x10000000  __RAM1_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x10000000  __RAM_segment_start__                         ----  Gb  [ Linker created ]
  0x10000000  __RAM_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x10008000  __RAM_segment_size__                          ----  Gb  [ Linker created ]
  0x10008000  __RAM_segment_used_size__                     ----  Gb  [ Linker created ]
  0x1000868C  __RAM1_segment_used_end__                     ----  Gb  [ Linker created ]
  0x10010000  __RAM1_segment_end__                          ----  Gb  [ Linker created ]
  0x20000000  __RAM2_segment_start__                        ----  Gb  [ Linker created ]
  0x20007800  __RAM2_segment_used_start__
                                                            ----  Gb  [ Linker created ]
  0x20008000  __RAM2_segment_end__                          ----  Gb  [ Linker created ]
  0x20008000  __RAM2_segment_used_end__                     ----  Gb  [ Linker created ]
  0x20008000  __RAM_segment_end__                           ----  Gb  [ Linker created ]
  0x20008000  __RAM_segment_used_end__                      ----  Gb  [ Linker created ]
  0x20008000  __stack_end__                                 ----  Gb  [ Linker created ]


***********************************************************************************************
***                                                                                         ***
***                                      LINK SUMMARY                                       ***
***                                                                                         ***
***********************************************************************************************

Memory breakdown:

   16 494 bytes read-only  code
      552 bytes read-only  data
   36 489 bytes read-write data

Region summary:

  Name        Range                     Size                 Used               Unused       Alignment Loss
  ----------  -----------------  -----------  -------------------  -------------------  -------------------
  FLASH       00000000-0007ffff      524 288       17 050   3.25%      507 238  96.75%            0   0.00%
  RAM1        10000000-1000ffff       65 536       34 441  52.55%       31 095  47.45%            0   0.00%
  RAM2        20000000-20007fff       32 768        2 048   6.25%       30 720  93.75%            0   0.00%

Link complete: 0 errors, 0 warnings, 0 remarks
